{"version":3,"sources":["webpack:///./src/eventBus.js","webpack:///./src/components/PaymentPage.vue","webpack:///./src/components/PaymentChat.vue","webpack:///src/components/PaymentChat.vue","webpack:///./src/components/PaymentChat.vue?cd01","webpack:///./src/components/PaymentChat.vue?ea46","webpack:///src/components/PaymentPage.vue","webpack:///./src/components/PaymentPage.vue?dbf6","webpack:///./src/components/PaymentPage.vue?bd4a","webpack:///./src/main.js","webpack:///./src/components/PaymentChat.vue?46e4","webpack:///./src/components/PaymentPage.vue?fee2"],"names":["EventBus","Vue","render","_vm$channelSettings","_vm$channelSettings$a","_vm","this","_c","_self","staticClass","style","showKeypad","showChat","paddingBottom","_e","_m","clientType","showWechatGuide","disableAllInput","class","active","selectedPaymentMethod","on","$event","selectPaymentMethod","_v","stopPropagation","toggleKeypad","apply","arguments","attrs","domProps","formattedAmount","isValidAmount","error","loading","processing","isPreRunning","processPayment","directives","name","rawName","value","expression","inputNumber","inputDot","deleteNumber","_s","width","progressWidth","progressText","showAnnouncement","channelSettings","announcement","enabled","closeAnnouncement","content","shouldShowChat","key","initialOrder","orderId","showNameInput","customerName","type","indexOf","_k","keyCode","confirmName","target","composing","nameError","cancelNameInput","isValidName","showPaymentQRModal","qrCodeUrl","ref","staticStyle","qrImageSrc","qrCodeText","copyPaymentLink","staticRenderFns","require","toggleChat","unreadCount","closing","isClosing","closeChat","_l","messages","msg","_id","getMessageClass","showSenderInfo","getSenderLabel","getImageUrl","previewImage","handleImageError","formatTime","createdAt","showEmojiPicker","emojis","emoji","insertEmoji","toggleEmojiPicker","handleImageUpload","newMessage","sendMessage","canSendMessage","closePreview","imageFile","sendImage","props","String","required","data","socketInitialized","isLoading","localMessages","processedMessageIds","Set","uploadingImage","computed","trim","methods","startsWith","baseUrl","process","replace","imagePath","$emit","initSocket","$socket","emit","room","off","message","has","add","push","sender","sort","a","b","Date","$nextTick","scrollToBottom","console","response","$api","get","forEach","imageUrl","messageData","post","$message","date","toLocaleTimeString","$refs","messageContainer","scrollTop","scrollHeight","messageInput","focus","event","file","files","size","formData","FormData","append","headers","e","src","includes","classList","title","newSrc","handleInput","handleKeyPress","shiftKey","preventDefault","reconnectSocket","setTimeout","mounted","loadMessages","beforeDestroy","component","components","PaymentChat","amount","channelId","userId","ipAddress","paymentType","progressTimer","orderUpdating","pendingOrder","paymentTimer","hasReceivedUrl","proxyInfo","isWechatBrowser","hxzfScriptRunning","hxzfScriptId","oldHxzfScriptRunning","oldHxzfScriptId","ipLocation","parseFloat","parsedAmount","isNaN","toFixed","_this$channelSettings","_this$channelSettings2","shouldShow","chatFeature","length","methodType","triggerPreRunIfNeeded","_this$channelSettings3","_this$channelSettings4","_this$channelSettings5","_this$channelSettings11","params","isWechatBrowserFunc","identifier","customParams","wechatGuideEnabled","status","_this$channelSettings6","_this$channelSettings7","merchantId","_this$channelSettings8","_this$channelSettings9","appid","appSecret","_this$channelSettings10","token","nameRequired","runProxyScript","_error$response","_error$response2","_error$response2$data","_response$data","ip","_this$channelSettings12","_this$channelSettings13","log","isInternal","blocked","reason","blockedBy","sharedBlacklist","disablePayment","regionBlacklist","province","city","provinces","cities","detectClient","ua","navigator","userAgent","toLowerCase","test","_this$channelSettings14","_this$channelSettings15","_this$channelSettings16","disableOutsideBrowser","num","split","toString","slice","startProgressBar","stopProgressBar","orderData","originalAmount","amountUpdatedAt","toISOString","put","skipAuthHeader","paymentResponse","handleCkxaPayment","order","handleXlrPayment","_paymentResponse","_paymentResponse$data","handle98Payment","payUrl","Error","handleZfbzzPayment","handleWubaiPayment","handleXfzfPayment","handleWfbPayment","handleJtpayPayment","handleHxzfPayment","handleOldHxzfPayment","handle5zfPayment","handleYddPayment","handle003Payment","handleLiliPayment","handleHeishiPayment","handleYilianPayment","handleYsmPayment","Promise","resolve","handleF2fPayment","handle213Payment","handleGoldenPayment","handleWxToQqPayment","handleHkrtPayment","handle76Payment","finalPayUrl","isValidUrl","notifyMerchantAfterScan","newWindow","window","open","document","write","decodeURIComponent","close","$notify","duration","showClose","location","href","_error$response3","_error$response3$data","quickProgress","setInterval","clearInterval","startSlowProgress","success","completeProgress","timeout","retry","retryDelay","validatePaymentResponse","handlePaymentError","partitionId","scriptId","_error$response4","_error$response4$data","_error$response5","_error$response5$data","deduction","Math","floor","random","_error$response6","_error$response6$data","_response$data$data","_error$response7","_error$response7$data","paymentUrl","_error$response8","_error$response8$data","startIPStatusCheck","ipCheckInterval","isBlocked","checkIPBlocked","channel","_error$response9","_error$response9$data","_this$channelSettings17","_this$channelSettings18","isInternalIP","ipResponse","ipError","eventName","startHeartbeat","_error$response10","_error$response10$dat","errorMessage","createOrder","heartbeatTimer","_this$initialOrder","stopHeartbeat","handleVisibilityChange","_this$initialOrder2","visibilityState","timestamp","now","responderId","handleBeforeUnload","_this$initialOrder3","sendBeacon","JSON","stringify","startPaymentTimer","$router","handlePaymentUrl","clearTimeout","requestData","warn","script","args","proxy","tempInput","createElement","body","appendChild","select","execCommand","removeChild","closePaymentLinkModal","generateQRCode","qrCanvas","then","QRCode","toCanvas","margin","errorCorrectionLevel","color","dark","light","canvas","toDataURL","err","catch","closeWechatGuide","hideKeypad","_this$ipLocation","_this$ipLocation2","_response$data2","_this$ipLocation3","_this$ipLocation4","_response$data3","preRunHxzfScript","preRunOldHxzfScript","$route","query","getClientIP","loadChannelSettings","createInitialOrder","_error$response11","_error$response11$dat","$on","isOpen","addEventListener","_this$initialOrder4","volatile","removeEventListener","beforeRouteLeave","to","from","next","_this$initialOrder5","watch","newVal","use","CompositionApi","PiniaVuePlugin","pinia","createPinia","ElementUI","config","productionTip","errorHandler","vm","info","prototype","socketService","Message","install","text","api","router","h","App","$mount"],"mappings":"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","file":"js/app~21833f8f.b53fa58e.js","sourcesContent":["import Vue from 'vue'\nexport const EventBus = new Vue()\n","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"payment-page\"},[_c('main',{staticClass:\"payment-container\",style:(_vm.showKeypad && !_vm.showChat ? { paddingBottom: '300px' } : {})},[(!_vm.showKeypad)?_c('div',{staticClass:\"card\"},[_vm._m(0),_vm._m(1)]):_vm._e(),(_vm.clientType === 'other' && !_vm.showWechatGuide && !_vm.disableAllInput)?_c('div',{staticClass:\"payment-method-options payment-method-inline\"},[_c('div',{staticClass:\"payment-method-option\",class:{ active: _vm.selectedPaymentMethod === 1 },on:{\"click\":function($event){return _vm.selectPaymentMethod(1)}}},[_vm._m(2),_c('div',{staticClass:\"payment-method-name\"},[_vm._v(\"微信支付\")])]),_c('div',{staticClass:\"payment-method-option\",class:{ active: _vm.selectedPaymentMethod === 2 },on:{\"click\":function($event){return _vm.selectPaymentMethod(2)}}},[_vm._m(3),_c('div',{staticClass:\"payment-method-name\"},[_vm._v(\"支付宝支付\")])])]):_vm._e(),_c('div',{staticClass:\"payment-amount-section\"},[_c('label',{staticClass:\"payment-amount-label\"},[_vm._v(\"支付金额\")]),_c('div',{staticClass:\"amount-input-container\",on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleKeypad.apply(null, arguments)}}},[_c('span',{staticClass:\"currency-symbol\"},[_vm._v(\"¥\")]),_c('input',{staticClass:\"amount-input\",attrs:{\"type\":\"text\",\"readonly\":\"\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},domProps:{\"value\":_vm.formattedAmount},on:{\"click\":function($event){$event.stopPropagation();return _vm.toggleKeypad.apply(null, arguments)}}})])]),(!_vm.showKeypad)?_c('button',{staticClass:\"pay-button\",class:{ active: _vm.isValidAmount && !_vm.error, loading: _vm.processing },attrs:{\"disabled\":!_vm.isValidAmount || _vm.error || _vm.processing || _vm.showWechatGuide || (_vm.clientType === 'other' && _vm.selectedPaymentMethod === null) || _vm.isPreRunning},on:{\"click\":_vm.processPayment}},[(!_vm.processing && !_vm.isPreRunning)?[_c('span',{staticClass:\"pay-text\"},[_vm._v(\"立即支付\")])]:(_vm.isPreRunning)?[_vm._m(4)]:[_vm._m(5)]],2):_vm._e(),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showKeypad && !_vm.showChat),expression:\"showKeypad && !showChat\"}],staticClass:\"keypad\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"keypad-container\"},[_c('div',{staticClass:\"keypad-numbers\"},[_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(1)}}},[_vm._v(\"1\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(2)}}},[_vm._v(\"2\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(3)}}},[_vm._v(\"3\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(4)}}},[_vm._v(\"4\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(5)}}},[_vm._v(\"5\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(6)}}},[_vm._v(\"6\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(7)}}},[_vm._v(\"7\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(8)}}},[_vm._v(\"8\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(9)}}},[_vm._v(\"9\")]),_c('button',{staticClass:\"keypad-button zero-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputNumber(0)}}},[_vm._v(\"0\")]),_c('button',{staticClass:\"keypad-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.inputDot.apply(null, arguments)}}},[_vm._v(\".\")])]),_c('div',{staticClass:\"keypad-actions\"},[_c('button',{staticClass:\"keypad-button delete-button\",attrs:{\"type\":\"button\",\"disabled\":_vm.disableAllInput || _vm.showWechatGuide},on:{\"click\":function($event){$event.stopPropagation();return _vm.deleteNumber.apply(null, arguments)}}},[_c('svg',{attrs:{\"xmlns\":\"http://www.w3.org/2000/svg\",\"width\":\"29\",\"height\":\"18.82\",\"viewBox\":\"0 0 29 18.82\"}},[_c('path',{staticClass:\"delete-icon-path\",attrs:{\"d\":\"M9.41,18.82a1.807,1.807,0,0,1-1.246-.5L.807,11.2A2.274,2.274,0,0,1,0,9.415a2.209,2.209,0,0,1,.8-1.78L8.164.5A1.807,1.807,0,0,1,9.41,0H25.39A3.522,3.522,0,0,1,29,3.411v12a3.517,3.517,0,0,1-3.607,3.411ZM2.03,8.794a.776.776,0,0,0-.283.624.806.806,0,0,0,.283.624L9.4,17.171H25.39a1.8,1.8,0,0,0,1.846-1.746V3.411A1.8,1.8,0,0,0,25.39,1.665H9.4Zm18.3,4-3.343-2.344-3.342,2.342a1.226,1.226,0,0,1-1.355,0,.533.533,0,0,1,0-.951L15.634,9.5,12.292,7.155A.6.6,0,0,1,12,6.68a.6.6,0,0,1,.292-.475,1.226,1.226,0,0,1,1.355,0l3.358,2.344L20.351,6.2a1.226,1.226,0,0,1,1.355,0,.541.541,0,0,1,0,.964L18.361,9.512l3.326,2.333a.533.533,0,0,1,0,.95,1.226,1.226,0,0,1-1.355,0Z\"}})])]),_c('button',{staticClass:\"confirm-pay-button\",attrs:{\"type\":\"button\",\"disabled\":!_vm.isValidAmount || _vm.error || _vm.processing || _vm.showWechatGuide || (_vm.clientType === 'other' && _vm.selectedPaymentMethod === null) || _vm.isPreRunning},on:{\"click\":function($event){$event.stopPropagation();return _vm.processPayment.apply(null, arguments)}}},[(!_vm.isPreRunning)?[_vm._v(\"确认支付\")]:[_vm._v(\"通道初始化...\")]],2)])])]),(_vm.error)?_c('div',{staticClass:\"error-message\"},[_vm._v(\" \"+_vm._s(_vm.error)+\" \")]):_vm._e(),(_vm.loading)?_c('div',{staticClass:\"loading-overlay\"},[_vm._m(6)]):_vm._e(),(_vm.processing)?_c('div',{staticClass:\"progress-overlay\"},[_c('div',{staticClass:\"progress-container\"},[_c('div',{staticClass:\"progress-bar\"},[_c('div',{staticClass:\"progress-fill\",style:({ width: _vm.progressWidth + '%' })})]),_c('div',{staticClass:\"progress-text\"},[_vm._v(\" \"+_vm._s(_vm.progressText)+\" \")])])]):_vm._e(),(_vm.showAnnouncement && _vm.channelSettings?.announcement?.enabled)?_c('div',{staticClass:\"announcement-overlay\"},[_c('div',{staticClass:\"announcement-modal\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"announcement-header\"},[_vm._m(7),_c('h3',[_vm._v(\"重要公告\")]),_c('button',{staticClass:\"close-btn\",on:{\"click\":_vm.closeAnnouncement}},[_c('i',{staticClass:\"fas fa-times\"})])]),_c('div',{staticClass:\"announcement-content\"},[_vm._v(\" \"+_vm._s(_vm.channelSettings.announcement.content)+\" \")]),_c('div',{staticClass:\"announcement-footer\"},[_c('button',{staticClass:\"confirm-btn\",on:{\"click\":_vm.closeAnnouncement}},[_c('i',{staticClass:\"fas fa-check\"}),_c('span',[_vm._v(\"我已知晓\")])])])])]):_vm._e(),(_vm.shouldShowChat)?_c('PaymentChat',{key:_vm.initialOrder.orderId,attrs:{\"orderId\":_vm.initialOrder.orderId}}):_vm._e(),(_vm.showNameInput)?_c('div',{staticClass:\"modal-overlay\"},[_c('div',{staticClass:\"name-input-modal\"},[_c('h3',[_vm._v(\"请输入姓名\")]),_c('div',{staticClass:\"input-group\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.customerName),expression:\"customerName\"}],attrs:{\"type\":\"text\",\"placeholder\":\"请输入您的真实姓名\",\"maxlength\":\"20\"},domProps:{\"value\":(_vm.customerName)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.confirmName.apply(null, arguments)},\"input\":function($event){if($event.target.composing)return;_vm.customerName=$event.target.value}}}),(_vm.nameError)?_c('p',{staticClass:\"error-text\"},[_vm._v(_vm._s(_vm.nameError))]):_vm._e()]),_c('div',{staticClass:\"modal-buttons\"},[_c('button',{staticClass:\"cancel-btn\",on:{\"click\":_vm.cancelNameInput}},[_vm._v(\"取消\")]),_c('button',{staticClass:\"confirm-btn\",attrs:{\"disabled\":!_vm.isValidName},on:{\"click\":_vm.confirmName}},[_vm._v(\"确认\")])])])]):_vm._e(),(_vm.showPaymentQRModal)?_c('div',{staticClass:\"modal-overlay\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('div',{staticClass:\"payment-link-modal\"},[_vm._m(8),_c('div',{staticClass:\"modal-content\"},[_c('p',{staticClass:\"modal-info\"},[_vm._v(\"请使用微信扫描以下二维码完成支付：\")]),_c('div',{staticClass:\"qr-code-container\"},[(_vm.qrCodeUrl)?_c('div',{staticClass:\"qr-wrapper\"},[_c('canvas',{ref:\"qrCanvas\",staticClass:\"qr-canvas\",staticStyle:{\"display\":\"none\"}}),(_vm.qrImageSrc)?_c('img',{staticClass:\"qr-image\",attrs:{\"src\":_vm.qrImageSrc,\"alt\":\"微信支付二维码\"}}):_c('div',{staticClass:\"qr-loading\"},[_vm._v(\"生成二维码中...\")])]):_vm._e()]),_c('p',{staticClass:\"modal-secondary-info\"},[_vm._v(\"如果无法扫码支付，请复制以下链接到微信打开：\")]),_c('div',{staticClass:\"payment-link-container\"},[_c('p',{staticClass:\"payment-link\"},[_vm._v(_vm._s(_vm.qrCodeText))]),_c('button',{staticClass:\"copy-btn\",on:{\"click\":_vm.copyPaymentLink}},[_c('i',{staticClass:\"fas fa-copy\"}),_vm._v(\" 复制链接 \")])])])])]):_vm._e()],1),(_vm.showWechatGuide)?_c('div',{staticClass:\"wechat-guide-overlay-svg\"},[_c('div',{staticClass:\"wechat-guide-content-svg\"},[_c('svg',{staticClass:\"guide-arrow-svg-curved\",attrs:{\"width\":\"120\",\"height\":\"120\",\"viewBox\":\"0 0 120 120\",\"fill\":\"none\",\"xmlns\":\"http://www.w3.org/2000/svg\"}},[_c('path',{attrs:{\"d\":\"M90 20 L100 30\",\"stroke\":\"white\",\"stroke-width\":\"6\",\"stroke-linecap\":\"round\"}}),_c('path',{attrs:{\"d\":\"M90 20 L80 30\",\"stroke\":\"white\",\"stroke-width\":\"6\",\"stroke-linecap\":\"round\"}}),_c('path',{attrs:{\"d\":\"M90 30 Q 60 100, 3 100\",\"stroke\":\"white\",\"stroke-width\":\"6\",\"stroke-linecap\":\"round\",\"stroke-dasharray\":\"10 8\",\"fill\":\"none\"}})]),_vm._m(9)])]):_vm._e()])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-header\"},[_c('div',[_c('div',{staticClass:\"merchant-small-title\"},[_vm._v(\"收款商户\")]),_c('div',{staticClass:\"merchant-name\"},[_vm._v(\"WAP\")])]),_c('img',{staticClass:\"merchant-avatar\",attrs:{\"src\":require(\"@/assets/img/logo1.png\"),\"alt\":\"收银\"}})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"merchant-type\"},[_vm._v(\"电商专版\")]),_c('div',{staticClass:\"card-body-down\"},[_c('img',{staticClass:\"card-icon\",attrs:{\"src\":require(\"@/assets/cardIcon.svg\"),\"alt\":\"card\"}}),_c('div',{staticClass:\"merchant-id-text\"},[_vm._v(\"商户编号：S1011\")])])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"payment-method-icon wechat\"},[_c('i',{staticClass:\"fab fa-weixin\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"payment-method-icon alipay\"},[_c('i',{staticClass:\"fab fa-alipay\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"spinner-wrapper\"},[_c('div',{staticClass:\"button-spinner\"}),_c('span',[_vm._v(\"通道初始化...\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"spinner-wrapper\"},[_c('div',{staticClass:\"button-spinner\"}),_c('span',[_vm._v(\"处理中...\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"loading-container\"},[_c('div',{staticClass:\"loading-spinner\"}),_c('span',{staticClass:\"loading-text\"},[_vm._v(\"正在加载支付信息...\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header-icon\"},[_c('i',{staticClass:\"fas fa-bullhorn\"})])\n},function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"modal-header\"},[_c('h3',[_vm._v(\"微信支付\")])])\n},function (){var _vm=this,_c=_vm._self._c;return _c('p',{staticClass:\"guide-text-svg\"},[_vm._v(\"请点击右上角 \"),_c('span',{staticClass:\"dots-svg\"},[_vm._v(\"...\")]),_c('br'),_vm._v(\"选择\"),_c('span',{staticClass:\"highlight-svg\"},[_vm._v(\"「在浏览器中打开」\")])])\n}]\n\nexport { render, staticRenderFns }","var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"payment-chat\"},[_c('div',{staticClass:\"chat-icon\",on:{\"click\":_vm.toggleChat}},[_c('i',{staticClass:\"fas fa-comments\"}),(_vm.unreadCount > 0)?_c('span',{staticClass:\"unread-badge\"},[_vm._v(\" \"+_vm._s(_vm.unreadCount)+\" \")]):_vm._e()]),(_vm.showChat)?_c('div',{class:['chat-window', { closing: _vm.isClosing }]},[_c('div',{staticClass:\"chat-header\"},[_vm._m(0),_c('button',{staticClass:\"close-btn\",attrs:{\"title\":\"关闭\"},on:{\"click\":_vm.closeChat}},[_c('i',{staticClass:\"fas fa-times\"})])]),_c('div',{ref:\"messageContainer\",staticClass:\"chat-messages\"},_vm._l((_vm.messages),function(msg){return _c('div',{key:msg._id,class:['message', _vm.getMessageClass(msg)]},[(_vm.showSenderInfo(msg))?_c('div',{staticClass:\"sender-info\"},[_vm._v(\" \"+_vm._s(_vm.getSenderLabel(msg))+\" \")]):_vm._e(),_c('div',{staticClass:\"message-content\"},[(msg.type === 'image')?[_c('img',{staticClass:\"chat-image\",attrs:{\"src\":_vm.getImageUrl(msg.content),\"alt\":\"聊天图片\"},on:{\"click\":function($event){_vm.previewImage = _vm.getImageUrl(msg.content)},\"error\":_vm.handleImageError}})]:[_vm._v(\" \"+_vm._s(msg.content)+\" \")]],2),_c('div',{staticClass:\"message-time\"},[_vm._v(_vm._s(_vm.formatTime(msg.createdAt)))])])}),0),_c('div',{staticClass:\"chat-input\"},[(_vm.showEmojiPicker)?_c('div',{staticClass:\"emoji-picker\"},[_c('div',{staticClass:\"emoji-container\"},_vm._l((_vm.emojis),function(emoji){return _c('span',{key:emoji,staticClass:\"emoji-item\",on:{\"click\":function($event){return _vm.insertEmoji(emoji)}}},[_vm._v(_vm._s(emoji))])}),0)]):_vm._e(),_c('div',{staticClass:\"input-toolbar\"},[_c('button',{staticClass:\"tool-btn\",on:{\"click\":_vm.toggleEmojiPicker}},[_c('i',{staticClass:\"far fa-smile\"})]),_c('label',{staticClass:\"tool-btn\"},[_c('i',{staticClass:\"far fa-image\"}),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"type\":\"file\",\"accept\":\"image/*\"},on:{\"change\":_vm.handleImageUpload}})])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.newMessage),expression:\"newMessage\"}],ref:\"messageInput\",attrs:{\"placeholder\":\"输入消息...\"},domProps:{\"value\":(_vm.newMessage)},on:{\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\"))return null;return _vm.sendMessage.apply(null, arguments)},\"input\":function($event){if($event.target.composing)return;_vm.newMessage=$event.target.value}}}),_c('button',{attrs:{\"disabled\":!_vm.canSendMessage},on:{\"click\":function($event){$event.stopPropagation();return _vm.sendMessage()}}},[_c('i',{staticClass:\"fas fa-paper-plane\"})])])]):_vm._e(),(_vm.previewImage)?_c('div',{staticClass:\"image-preview-modal\",on:{\"click\":_vm.closePreview}},[_c('div',{staticClass:\"preview-content\",on:{\"click\":function($event){$event.stopPropagation();}}},[_c('img',{attrs:{\"src\":_vm.previewImage,\"alt\":\"预览图片\"}}),_c('div',{staticClass:\"preview-actions\"},[_c('button',{staticClass:\"cancel-btn\",on:{\"click\":_vm.closePreview}},[_vm._v(\"取消\")]),(_vm.imageFile)?_c('button',{staticClass:\"send-btn\",on:{\"click\":_vm.sendImage}},[_vm._v(\"发送\")]):_vm._e()])])]):_vm._e()])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"header-content\"},[_c('i',{staticClass:\"fas fa-headset header-icon\"}),_c('span',{staticClass:\"header-title\"},[_vm._v(\"联系商家\")])])\n}]\n\nexport { render, staticRenderFns }","<template>\n  <div class=\"payment-chat\">\n    <!-- 聊天图标和未读消息提示 -->\n    <div class=\"chat-icon\" @click=\"toggleChat\">\n      <i class=\"fas fa-comments\"></i>\n      <!-- 添加未读消息小红点 -->\n      <span v-if=\"unreadCount > 0\" class=\"unread-badge\">\n        {{ unreadCount }}\n      </span>\n    </div>\n\n    <!-- 聊天窗口 -->\n    <div v-if=\"showChat\" :class=\"['chat-window', { closing: isClosing }]\">\n      <div class=\"chat-header\">\n        <div class=\"header-content\">\n          <i class=\"fas fa-headset header-icon\"></i>\n          <span class=\"header-title\">联系商家</span>\n        </div>\n        <button class=\"close-btn\" @click=\"closeChat\" title=\"关闭\">\n          <i class=\"fas fa-times\"></i>\n        </button>\n      </div>\n\n      <div class=\"chat-messages\" ref=\"messageContainer\">\n        <div v-for=\"msg in messages\" :key=\"msg._id\" \n          :class=\"['message', getMessageClass(msg)]\">\n          <div class=\"sender-info\" v-if=\"showSenderInfo(msg)\">\n            {{ getSenderLabel(msg) }}\n          </div>\n          <div class=\"message-content\">\n            <template v-if=\"msg.type === 'image'\">\n              <img \n                :src=\"getImageUrl(msg.content)\" \n                alt=\"聊天图片\" \n                @click=\"previewImage = getImageUrl(msg.content)\"\n                @error=\"handleImageError\"\n                class=\"chat-image\"\n              >\n            </template>\n            <template v-else>\n              {{ msg.content }}\n            </template>\n          </div>\n          <div class=\"message-time\">{{ formatTime(msg.createdAt) }}</div>\n        </div>\n      </div>\n\n      <div class=\"chat-input\">\n        <!-- 添加表情选择器 -->\n        <div class=\"emoji-picker\" v-if=\"showEmojiPicker\">\n          <div class=\"emoji-container\">\n            <span v-for=\"emoji in emojis\" \n              :key=\"emoji\"\n              @click=\"insertEmoji(emoji)\"\n              class=\"emoji-item\"\n            >{{ emoji }}</span>\n          </div>\n        </div>\n\n        <!-- 添加工具栏 -->\n        <div class=\"input-toolbar\">\n          <button class=\"tool-btn\" @click=\"toggleEmojiPicker\">\n            <i class=\"far fa-smile\"></i>\n          </button>\n          <label class=\"tool-btn\">\n            <i class=\"far fa-image\"></i>\n            <input \n              type=\"file\"\n              accept=\"image/*\"\n              @change=\"handleImageUpload\"\n              style=\"display: none\"\n            >\n          </label>\n        </div>\n\n        <input \n          v-model=\"newMessage\" \n          @keyup.enter=\"sendMessage\"\n          placeholder=\"输入消息...\"\n          ref=\"messageInput\"\n        >\n        <button \n          @click.stop=\"sendMessage()\" \n          :disabled=\"!canSendMessage\"\n        >\n          <i class=\"fas fa-paper-plane\"></i>\n        </button>\n      </div>\n    </div>\n\n    <!-- 添加图片预览弹窗 -->\n    <div v-if=\"previewImage\" class=\"image-preview-modal\" @click=\"closePreview\">\n      <div class=\"preview-content\" @click.stop>\n        <img :src=\"previewImage\" alt=\"预览图片\">\n        <div class=\"preview-actions\">\n          <button class=\"cancel-btn\" @click=\"closePreview\">取消</button>\n          <button v-if=\"imageFile\" class=\"send-btn\" @click=\"sendImage\">发送</button>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { EventBus } from '@/eventBus'\n\nexport default {\n  name: 'PaymentChat',\n  props: {\n    orderId: {\n      type: String,\n      required: true\n    }\n  },\n  data() {\n    return {\n      showChat: false,\n      messages: [],\n      newMessage: '',\n      unreadCount: 0,\n      socketInitialized: false,\n      isLoading: false,\n      localMessages: [],\n      processedMessageIds: new Set(),\n      showEmojiPicker: false,\n      emojis: ['😊', '😂', '🤔', '👍', '❤️', '😭', '🎉', '🌟', '💪', '🙏', '😄', '😅', '😆', '😉', '😋', '😎', '😍', '🥰', '😘', '🤗', '🤩', '🥳', '😇', '🤠', '🤓'],\n      uploadingImage: false,\n      isClosing: false\n    }\n  },\n  computed: {\n    canSendMessage() {\n      return !this.uploadingImage && this.newMessage.trim();\n    }\n  },\n  methods: {\n    getImageUrl(content) {\n      if (!content || content.startsWith('http') || content.startsWith('blob:')) {\n        return content;\n      }\n      const baseUrl = (process.env.VUE_APP_API_BASE_URL || '').replace(/\\/$/, '');\n      const imagePath = content.startsWith('/') ? content : `/${content}`;\n      return `${baseUrl}${imagePath}`;\n    },\n    toggleChat() {\n      if (this.showChat) {\n        this.closeChat();\n      } else {\n        this.showChat = true;\n        this.unreadCount = 0;\n        EventBus.$emit('payment-chat-toggle', true);\n      }\n    },\n    initSocket() {\n      if (this.socketInitialized) return;\n\n      if (!this.$socket) {\n        console.error('Socket not initialized');\n        return;\n      }\n\n      // 直接加入订单房间\n      if (this.orderId) {\n        \n        // 加入订单房间\n        this.$socket.emit('join-chat', { \n          room: `order:${this.orderId}`\n        });\n        \n        // 移除旧的监听器\n        this.$socket.off('newMessage');\n        \n        // 监听普通消息(针对特定订单)\n        this.$socket.on('newMessage', (data) => {\n          \n          if (data.orderId === this.orderId) {\n            const message = data.message;\n            \n            if (!this.processedMessageIds.has(message._id)) {\n              this.processedMessageIds.add(message._id);\n              this.messages.push(message);\n              \n              // 如果聊天窗口没有打开，增加未读消息计数\n              if (!this.showChat && message.sender === 'merchant') {\n                this.unreadCount++;\n              }\n              \n              // 确保消息按时间排序\n              this.messages.sort((a, b) => \n                new Date(a.createdAt) - new Date(b.createdAt)\n              );\n              \n              this.$nextTick(() => {\n                this.scrollToBottom();\n              });\n            }\n          }\n        });\n\n        // 添加调试日志\n        this.$socket.on('connect', () => {\n          // 重新加入房间\n          this.$socket.emit('join-chat', { \n            room: `order:${this.orderId}`\n          });\n        });\n\n        this.$socket.on('disconnect', () => {\n          this.socketInitialized = false;\n        });\n\n        this.socketInitialized = true;\n      }\n    },\n    async loadMessages() {\n      if (this.isLoading) return;\n      \n      try {\n        this.isLoading = true;\n        const response = await this.$api.get(`/api/messages/${this.orderId}`);\n        \n        // 处理新消息\n        response.data.forEach(msg => {\n          if (!this.processedMessageIds.has(msg._id)) {\n            this.processedMessageIds.add(msg._id);\n            this.messages.push(msg);\n          }\n        });\n        \n        // 确保消息按时间排序\n        this.messages.sort((a, b) => \n          new Date(a.createdAt) - new Date(b.createdAt)\n        );\n        \n        this.$nextTick(() => {\n          this.scrollToBottom();\n        });\n      } catch (error) {\n        console.error('Load messages error:', error);\n      } finally {\n        this.isLoading = false;\n      }\n    },\n    async sendMessage(imageUrl = null) {\n      if ((!this.newMessage.trim() && !imageUrl) || !this.orderId) return;\n      \n      try {\n        const messageData = {\n          content: imageUrl || this.newMessage.trim(),\n          type: imageUrl ? 'image' : 'text',\n          sender: 'user'  // 付款页面发送的消息都是用户消息\n        };\n\n\n        const response = await this.$api.post(`/api/messages/${this.orderId}`, messageData);\n\n        if (response.data) {\n          // 清空输入框(仅文本消息时清空)\n          if (!imageUrl) {\n            this.newMessage = '';\n          }\n\n          // 添加新消息到列表\n          if (!this.processedMessageIds.has(response.data._id)) {\n            this.processedMessageIds.add(response.data._id);\n            this.messages.push(response.data);\n            \n            // 确保消息按时间排序\n            this.messages.sort((a, b) => \n              new Date(a.createdAt) - new Date(b.createdAt)\n            );\n          }\n\n          this.$nextTick(() => {\n            this.scrollToBottom();\n          });\n        }\n      } catch (error) {\n        console.error('Send message error:', error);\n        this.$message.error('发送消息失败');\n      }\n    },\n    formatTime(date) {\n      return new Date(date).toLocaleTimeString();\n    },\n    scrollToBottom() {\n      if (this.$refs.messageContainer) {\n        this.$refs.messageContainer.scrollTop = this.$refs.messageContainer.scrollHeight;\n      }\n    },\n    getMessageClass(message) {\n      return message.sender === 'user' ? 'sent' : 'received';\n    },\n    showSenderInfo(message) {\n      return message.sender === 'merchant' || message.sender === 'user';\n    },\n    getSenderLabel(message) {\n      return message.sender === 'user' ? '我' : '商家';\n    },\n    toggleEmojiPicker() {\n      this.showEmojiPicker = !this.showEmojiPicker;\n    },\n    insertEmoji(emoji) {\n      this.newMessage += emoji;\n      this.$refs.messageInput.focus();\n    },\n    async handleImageUpload(event) {\n      const file = event.target.files[0];\n      if (!file) return;\n      \n      // 验证文件类型和大小\n      if (!file.type.startsWith('image/')) {\n        this.$message.error('请选择图片文件');\n        return;\n      }\n      \n      if (file.size > 5 * 1024 * 1024) { // 5MB限制\n        this.$message.error('图片大小不能超过5MB');\n        return;\n      }\n      \n      this.uploadingImage = true;\n      try {\n        // 创建 FormData\n        const formData = new FormData();\n        formData.append('image', file);\n        \n        // 上传图片\n        const response = await this.$api.post('/api/messages/upload-image', formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n        });\n        \n        // 发送图片消息\n        if (response.data.imageUrl) {\n          await this.sendMessage(response.data.imageUrl);\n        }\n      } catch (error) {\n        console.error('Upload image error:', error);\n        this.$message.error('图片上传失败');\n      } finally {\n        this.uploadingImage = false;\n      }\n    },\n    handleImageError(e) {\n      console.error('Image load failed:', e.target.src);\n      if (!e.target.src.includes('/chat/')) {\n        const newSrc = e.target.src.replace('/uploads/', '/uploads/chat/');\n        e.target.src = newSrc;\n      } else {\n        e.target.classList.add('image-error');\n        e.target.title = '图片加载失败';\n      }\n    },\n    handleInput(event) {\n      this.newMessage = event.target.value;\n    },\n    handleKeyPress(event) {\n      if (event.key === 'Enter' && !event.shiftKey) {\n        event.preventDefault();\n        this.sendMessage();\n      }\n    },\n    reconnectSocket() {\n      if (this.$socket && this.orderId) {\n        this.socketInitialized = false;\n        this.initSocket();\n      }\n    },\n    closeChat() {\n      this.isClosing = true;\n      setTimeout(() => {\n        this.showChat = false;\n        this.isClosing = false;\n        EventBus.$emit('payment-chat-toggle', false);\n      }, 300);\n    }\n  },\n  mounted() {\n    // 初始化 socket 连接，不需要检查登录状态\n    this.initSocket();\n    \n    // 加载历史消息\n    if (this.orderId) {\n      this.loadMessages();\n    }\n\n    // 添加重连逻辑\n    if (this.$socket) {\n      this.$socket.on('connect', () => {\n        this.initSocket();\n      });\n\n      this.$socket.on('disconnect', () => {\n        this.socketInitialized = false;\n      });\n    }\n  },\n  beforeDestroy() {\n    if (this.$socket && this.orderId) {\n      this.$socket.emit('leave-chat', {\n        room: `order:${this.orderId}`\n      });\n      this.$socket.off('newMessage');\n      this.$socket.off('connect');\n      this.$socket.off('disconnect');\n      this.socketInitialized = false;\n    }\n  }\n}\n</script>\n\n<style scoped>\n.payment-chat {\n  position: fixed;\n  bottom: 20px;\n  right: 20px;\n  z-index: 1000;\n}\n\n/* 聊天图标和未读消息提示 */\n.chat-icon {\n  position: relative; /* 为未读消息徽章提供定位上下文 */\n  width: 56px;\n  height: 56px;\n  background: linear-gradient(135deg, #6366F1 0%, #4F46E5 100%);\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  box-shadow: 0 4px 12px rgba(99, 102, 241, 0.25);\n  transition: all 0.3s ease;\n}\n\n.chat-icon:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 6px 16px rgba(99, 102, 241, 0.3);\n}\n\n.chat-icon i {\n  font-size: 24px;\n  color: white;\n}\n\n/* 添加未读消息小红点样式 */\n.unread-badge {\n  position: absolute;\n  top: -5px;\n  right: -5px;\n  background-color: #EF4444;\n  color: white;\n  border-radius: 50%;\n  min-width: 20px;\n  height: 20px;\n  padding: 0 6px;\n  font-size: 12px;\n  font-weight: bold;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border: 2px solid white;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n/* 聊天窗口 */\n.chat-window {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  z-index: 2000;\n  animation: expandFromIcon 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n  transform-origin: calc(100% - 48px) calc(100% - 48px);\n  will-change: transform, opacity, border-radius;\n}\n\n/* 优化展开动画 */\n@keyframes expandFromIcon {\n  0% {\n    transform: scale(0);\n    opacity: 0;\n    border-radius: 50%;\n    clip-path: circle(28px at calc(100% - 48px) calc(100% - 48px));\n  }\n  20% {\n    opacity: 1;\n  }\n  100% {\n    transform: scale(1);\n    opacity: 1;\n    border-radius: 0;\n    clip-path: circle(150% at calc(100% - 48px) calc(100% - 48px));\n  }\n}\n\n/* 优化关闭动画 */\n@keyframes collapseToIcon {\n  0% {\n    transform: scale(1);\n    opacity: 1;\n    border-radius: 0;\n    clip-path: circle(150% at calc(100% - 48px) calc(100% - 48px));\n  }\n  40% {\n    opacity: 1;\n  }\n  100% {\n    transform: scale(0);\n    opacity: 0;\n    border-radius: 50%;\n    clip-path: circle(28px at calc(100% - 48px) calc(100% - 48px));\n  }\n}\n\n.chat-window.closing {\n  animation: collapseToIcon 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;\n}\n\n/* 聊天头部 */\n.chat-header {\n  padding: 12px 16px;\n  background: #f9fafb;\n  color: #1f2937;\n  border-bottom: 1px solid #e5e7eb;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-shrink: 0;\n  animation: fadeInContent 0.3s ease-out;\n  animation-fill-mode: both;\n}\n\n.chat-header h3 {\n  margin: 0;\n  font-size: 18px;\n  font-weight: 600;\n}\n\n.header-content {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  font-weight: 600;\n  font-size: 1rem;\n}\n\n.header-icon {\n  color: #4f46e5; /* 主题色 */\n}\n\n.close-btn {\n  width: 32px;\n  height: 32px;\n  border-radius: 50%;\n  border: none;\n  background: none;\n  color: #6b7280;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.close-btn:hover {\n  background: #e5e7eb;\n  color: #ef4444;\n}\n\n/* 消息区域 */\n.chat-messages {\n  flex: 1;\n  padding: 16px;\n  overflow-y: auto;\n  -webkit-overflow-scrolling: touch;\n  background: #f8fafc;\n  display: flex;\n  flex-direction: column;\n  gap: 12px;\n  position: relative;\n  height: calc(100% - 120px);\n  animation: fadeInContent 0.3s ease-out;\n  animation-fill-mode: both;\n}\n\n.message {\n  max-width: 85%;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n  animation: fadeIn 0.3s ease;\n}\n\n.message.sent {\n  align-self: flex-end;\n}\n\n.message.received {\n  align-self: flex-start;\n}\n\n.sender-info {\n  font-size: 12px;\n  color: #6B7280;\n  margin-bottom: 2px;\n}\n\n.message-content {\n  padding: 10px 15px;\n  border-radius: 18px;\n  font-size: 0.9rem;\n  line-height: 1.5;\n  word-break: break-word;\n}\n\n.sent .message-content {\n  background: #4f46e5;\n  color: white;\n  border-bottom-right-radius: 4px;\n}\n\n.received .message-content {\n  background: #e5e7eb;\n  color: #1f2937;\n  border-bottom-left-radius: 4px;\n}\n\n.message-time {\n  font-size: 0.7rem;\n  color: #9ca3af;\n  padding: 0 5px;\n}\n\n.sent .message-time {\n  text-align: right;\n}\n\n/* 输入区域 */\n.chat-input {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  padding: 10px 12px;\n  background: white;\n  border-top: 1px solid #e5e7eb;\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  width: 100%;\n  box-sizing: border-box;\n  z-index: 2001;\n  animation: fadeInContent 0.3s ease-out;\n  animation-fill-mode: both;\n  transition: all 0.2s;\n}\n\n.input-toolbar {\n  display: flex;\n  gap: 4px;\n  flex-shrink: 0;\n}\n\n.chat-input input {\n  flex: 1;\n  min-width: 0;\n  height: 40px;\n  border: none;\n  border-radius: 20px;\n  padding: 0 16px;\n  outline: none;\n  font-size: 0.9rem;\n  background: #f3f4f6;\n  transition: background-color 0.2s, box-shadow 0.2s;\n}\n\n.chat-input input:focus {\n  background-color: white;\n  box-shadow: 0 0 0 2px #4f46e5;\n}\n\n.chat-input button {\n  width: 40px;\n  height: 40px;\n  flex-shrink: 0;\n  border-radius: 50%;\n  border: none;\n  background: #4f46e5;\n  color: white;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s;\n  padding: 0;\n}\n\n.chat-input button:hover:not(:disabled) {\n  transform: scale(1.05);\n  box-shadow: 0 4px 12px rgba(79, 70, 229, 0.2);\n}\n\n.chat-input button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n  transform: none;\n  box-shadow: none;\n  background: #e5e7eb;\n}\n\n/* 滚动条样式 */\n.chat-messages::-webkit-scrollbar {\n  width: 5px;\n}\n\n.chat-messages::-webkit-scrollbar-track {\n  background: transparent;\n}\n\n.chat-messages::-webkit-scrollbar-thumb {\n  background: #CBD5E1;\n  border-radius: 3px;\n}\n\n.chat-messages:hover::-webkit-scrollbar-thumb {\n  background: #94A3B8;\n}\n\n/* 动画效果 */\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(20px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n@keyframes fadeIn {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .chat-window {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    width: 100%;\n    height: 100%;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n    z-index: 2000;\n  }\n\n  .chat-messages {\n    flex: 1;\n    height: auto;\n    margin-bottom: 70px;\n    overflow-y: auto;\n    -webkit-overflow-scrolling: touch;\n  }\n\n  .chat-input {\n    position: fixed;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    background: white;\n    padding: 8px 12px;\n    padding-bottom: max(8px, env(safe-area-inset-bottom));\n    border-top: 1px solid #e5e7eb;\n    z-index: 2001;\n  }\n}\n\n/* 确保在不同屏幕尺寸下布局正确 */\n@media (min-width: 769px) {\n  .chat-window {\n    width: 380px;\n    height: 520px;\n    right: 20px;\n    left: auto;\n    bottom: 90px;\n    top: auto;\n    border-radius: 16px;\n    overflow: hidden;\n    box-shadow: 0 10px 25px -5px rgba(0, 0, 0, 0.1), 0 8px 10px -6px rgba(0, 0, 0, 0.1);\n    animation: expandFromIconDesktop 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n    transform-origin: bottom right;\n    border: 1px solid #e5e7eb;\n  }\n\n  .chat-window.closing {\n    animation: collapseToIconDesktop 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;\n  }\n\n  @keyframes expandFromIconDesktop {\n    0% {\n      transform: scale(0.2) translateY(80px);\n      opacity: 0;\n      clip-path: circle(28px at calc(100% - 28px) calc(100% - 28px));\n    }\n    20% {\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n      clip-path: circle(150% at calc(100% - 28px) calc(100% - 28px));\n    }\n  }\n\n  @keyframes collapseToIconDesktop {\n    0% {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n      clip-path: circle(150% at calc(100% - 28px) calc(100% - 28px));\n    }\n    40% {\n      opacity: 1;\n    }\n    100% {\n      transform: scale(0.2) translateY(80px);\n      opacity: 0;\n      clip-path: circle(28px at calc(100% - 28px) calc(100% - 28px));\n    }\n  }\n\n  .chat-messages {\n    margin-bottom: 60px;\n  }\n}\n\n.chat-image {\n  max-width: 200px;\n  max-height: 200px;\n  border-radius: 8px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n}\n\n.chat-image:hover {\n  transform: scale(1.05);\n}\n\n.image-error {\n  border: 1px solid #FCA5A5;\n  padding: 10px;\n  position: relative;\n}\n\n.image-error::after {\n  content: '图片加载失败';\n  position: absolute;\n  bottom: -20px;\n  left: 50%;\n  transform: translateX(-50%);\n  font-size: 12px;\n  color: #DC2626;\n  white-space: nowrap;\n}\n\n/* 表情选择器样式 */\n.emoji-picker {\n  position: absolute;\n  bottom: 100%;\n  left: 0;\n  background: white;\n  border-radius: 16px;\n  box-shadow: 0 -4px 20px rgba(0, 0, 0, 0.15);\n  padding: 12px;\n  margin-bottom: 8px;\n  border: 1px solid #e5e7eb;\n  animation: slideUp 0.2s ease;\n  z-index: 2002;\n  width: 320px;\n  max-width: calc(100vw - 40px);\n  left: 50%;\n  transform: translateX(-50%);\n}\n\n.emoji-container {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  gap: 8px;\n  max-height: 200px;\n  overflow-y: auto;\n  padding: 4px;\n  justify-items: center;\n}\n\n.emoji-item {\n  width: 32px;\n  height: 32px;\n  font-size: 20px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border-radius: 8px;\n  transition: all 0.2s ease;\n  user-select: none;\n  -webkit-user-select: none;\n}\n\n.emoji-item:hover {\n  background: #f3f4f6;\n  transform: scale(1.1);\n}\n\n.emoji-item:active {\n  transform: scale(0.95);\n  background: #e5e7eb;\n}\n\n/* 工具栏按钮样式 */\n.tool-btn {\n  width: 36px;\n  height: 36px;\n  border: none;\n  background: none;\n  border-radius: 50%;\n  color: #6b7280;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  position: relative;\n}\n\n.tool-btn:hover {\n  color: #4f46e5;\n  background: #f3f4f6;\n}\n\n.tool-btn:active {\n  transform: scale(0.95);\n}\n\n.tool-btn.active {\n  color: #4f46e5;\n  background: #eff6ff;\n}\n\n.tool-btn i {\n  font-size: 1.1rem;\n}\n\n/* 移动端适配 */\n@media (max-width: 768px) {\n  .emoji-picker {\n    position: fixed;\n    bottom: 76px;\n    left: 0;\n    right: 0;\n    width: 100%;\n    max-width: 100%;\n    transform: none;\n    border-radius: 16px 16px 0 0;\n    margin-bottom: 0;\n    padding: 12px 12px calc(env(safe-area-inset-bottom) + 12px) 12px;\n    box-shadow: 0 -2px 10px rgba(0, 0, 0, 0.1);\n    background: rgba(255, 255, 255, 0.98);\n    backdrop-filter: blur(10px);\n  }\n\n  .emoji-container {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(40px, 1fr));\n    gap: 12px;\n    max-height: 180px;\n    padding: 8px;\n    justify-items: center;\n    align-items: center;\n    width: 100%;\n    box-sizing: border-box;\n    margin: 0 auto;\n    max-width: 400px;\n  }\n\n  .emoji-item {\n    width: 38px;\n    height: 38px;\n    font-size: 22px;\n    padding: 0;\n    margin: 0;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }\n}\n\n/* 适配超小屏幕 */\n@media (max-width: 360px) {\n  .emoji-container {\n    gap: 8px;\n    padding: 4px;\n  }\n\n  .emoji-item {\n    width: 34px;\n    height: 34px;\n    font-size: 20px;\n  }\n}\n\n/* 适配 iPhone SE 等小屏设备 */\n@media (max-height: 667px) {\n  .emoji-picker {\n    bottom: 64px;\n  }\n\n  .emoji-container {\n    max-height: 150px;\n  }\n}\n\n/* 表情选择器动画 */\n@keyframes slideUp {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 聊天内容淡入动画 */\n.chat-header,\n.chat-messages,\n.chat-input {\n  animation: fadeInContent 0.3s ease-out;\n  animation-fill-mode: both;\n}\n\n.chat-header {\n  animation-delay: 0.2s;\n}\n\n.chat-messages {\n  animation-delay: 0.3s;\n}\n\n.chat-input {\n  animation-delay: 0.4s;\n}\n\n@keyframes fadeInContent {\n  from {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n  to {\n    opacity: 1;\n    transform: translateY(0);\n  }\n}\n\n/* 桌面端动画 */\n@media (min-width: 769px) {\n  .chat-window {\n    width: 360px;\n    height: 520px;\n    right: 20px;\n    left: auto;\n    bottom: 90px;\n    top: auto;\n    border-radius: 20px;\n    overflow: hidden;\n    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);\n    animation: expandFromIconDesktop 0.5s cubic-bezier(0.34, 1.56, 0.64, 1);\n    transform-origin: bottom right;\n  }\n\n  .chat-window.closing {\n    animation: collapseToIconDesktop 0.5s cubic-bezier(0.34, 1.56, 0.64, 1) forwards;\n  }\n\n  @keyframes expandFromIconDesktop {\n    0% {\n      transform: scale(0.2) translateY(80px);\n      opacity: 0;\n      clip-path: circle(28px at calc(100% - 28px) calc(100% - 28px));\n    }\n    20% {\n      opacity: 1;\n    }\n    100% {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n      clip-path: circle(150% at calc(100% - 28px) calc(100% - 28px));\n    }\n  }\n\n  @keyframes collapseToIconDesktop {\n    0% {\n      transform: scale(1) translateY(0);\n      opacity: 1;\n      clip-path: circle(150% at calc(100% - 28px) calc(100% - 28px));\n    }\n    40% {\n      opacity: 1;\n    }\n    100% {\n      transform: scale(0.2) translateY(80px);\n      opacity: 0;\n      clip-path: circle(28px at calc(100% - 28px) calc(100% - 28px));\n    }\n  }\n}\n\n/* 内容淡出动画 */\n.chat-window.closing .chat-header,\n.chat-window.closing .chat-messages,\n.chat-window.closing .chat-input {\n  animation: fadeOutContent 0.3s ease-out forwards;\n}\n\n.chat-window.closing .chat-header {\n  animation-delay: 0s;\n}\n\n.chat-window.closing .chat-messages {\n  animation-delay: 0.05s;\n}\n\n.chat-window.closing .chat-input {\n  animation-delay: 0.1s;\n}\n\n@keyframes fadeOutContent {\n  from {\n    opacity: 1;\n    transform: translateY(0);\n  }\n  to {\n    opacity: 0;\n    transform: translateY(10px);\n  }\n}\n</style> ","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentChat.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentChat.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PaymentChat.vue?vue&type=template&id=1b922ecd&scoped=true\"\nimport script from \"./PaymentChat.vue?vue&type=script&lang=js\"\nexport * from \"./PaymentChat.vue?vue&type=script&lang=js\"\nimport style0 from \"./PaymentChat.vue?vue&type=style&index=0&id=1b922ecd&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1b922ecd\",\n  null\n  \n)\n\nexport default component.exports","<template>\n  <div class=\"payment-page\">\n\n    <!-- 主要支付区域 -->\n    <main class=\"payment-container\" :style=\"showKeypad && !showChat ? { paddingBottom: '300px' } : {}\">\n      <!-- 商户信息 -->\n      <div v-if=\"!showKeypad\" class=\"card\">\n        <div class=\"card-header\">\n          <div>\n            <div class=\"merchant-small-title\">收款商户</div>\n            <div class=\"merchant-name\">WAP</div>\n          </div>\n          <img src=\"@/assets/img/logo1.png\" alt=\"收银\" class=\"merchant-avatar\">\n        </div>\n        <div class=\"card-body\">\n          <div class=\"merchant-type\">电商专版</div>\n          <div class=\"card-body-down\">\n            <img src=\"@/assets/cardIcon.svg\" alt=\"card\" class=\"card-icon\">\n            <div class=\"merchant-id-text\">商户编号：S1011</div>\n          </div>\n        </div>\n      </div>\n\n      <!-- 支付方式选择区域 - 仅在非微信/支付宝环境下显示 -->\n      <div v-if=\"clientType === 'other' && !showWechatGuide && !disableAllInput\" class=\"payment-method-options payment-method-inline\">\n        <div \n          class=\"payment-method-option\" \n          :class=\"{ active: selectedPaymentMethod === 1 }\"\n          @click=\"selectPaymentMethod(1)\"\n        >\n          <div class=\"payment-method-icon wechat\">\n            <i class=\"fab fa-weixin\"></i>\n          </div>\n          <div class=\"payment-method-name\">微信支付</div>\n        </div>\n        <div \n          class=\"payment-method-option\" \n          :class=\"{ active: selectedPaymentMethod === 2 }\"\n          @click=\"selectPaymentMethod(2)\"\n        >\n          <div class=\"payment-method-icon alipay\">\n            <i class=\"fab fa-alipay\"></i>\n          </div>\n          <div class=\"payment-method-name\">支付宝支付</div>\n        </div>\n      </div>\n\n      <!-- 支付金额输入区域 -->\n      <div class=\"payment-amount-section\">\n        <label class=\"payment-amount-label\">支付金额</label>\n        <div class=\"amount-input-container\" @click.stop=\"toggleKeypad\">\n          <span class=\"currency-symbol\">¥</span>\n          <input \n            type=\"text\" \n            class=\"amount-input\" \n            :value=\"formattedAmount\"\n            readonly\n            :disabled=\"disableAllInput || showWechatGuide\"\n            @click.stop=\"toggleKeypad\"\n          >\n        </div>\n      </div>\n\n      <!-- 付款按钮 -->\n      <button \n        v-if=\"!showKeypad\"\n        class=\"pay-button\"\n        :class=\"{ active: isValidAmount && !error, loading: processing }\"\n        :disabled=\"!isValidAmount || error || processing || showWechatGuide || (clientType === 'other' && selectedPaymentMethod === null) || isPreRunning\"\n        @click=\"processPayment\"\n      >\n        <template v-if=\"!processing && !isPreRunning\">\n          <span class=\"pay-text\">立即支付</span>\n        </template>\n        <template v-else-if=\"isPreRunning\">\n          <div class=\"spinner-wrapper\">\n            <div class=\"button-spinner\"></div>\n            <span>通道初始化...</span>\n          </div>\n        </template>\n        <template v-else>\n          <div class=\"spinner-wrapper\">\n            <div class=\"button-spinner\"></div>\n            <span>处理中...</span>\n          </div>\n        </template>\n      </button>\n\n      <!-- 数字键盘 -->\n      <div class=\"keypad\" @click.stop v-show=\"showKeypad && !showChat\">\n        <div class=\"keypad-container\">\n          <!-- 数字按钮区域 -->\n          <div class=\"keypad-numbers\">\n            <!-- 第一行：1 2 3 -->\n          <button \n            type=\"button\" \n            class=\"keypad-button\"\n              @click.stop=\"inputNumber(1)\"\n            :disabled=\"disableAllInput || showWechatGuide\"\n            >1</button>\n          <button \n            type=\"button\" \n            class=\"keypad-button\"\n              @click.stop=\"inputNumber(2)\"\n            :disabled=\"disableAllInput || showWechatGuide\"\n            >2</button>\n          <button \n            type=\"button\" \n            class=\"keypad-button\"\n              @click.stop=\"inputNumber(3)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >3</button>\n            \n            <!-- 第二行：4 5 6 -->\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(4)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >4</button>\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(5)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >5</button>\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(6)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >6</button>\n            \n            <!-- 第三行：7 8 9 -->\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(7)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >7</button>\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(8)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >8</button>\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputNumber(9)\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >9</button>\n            \n            <!-- 第四行：0(占两格) 小数点 -->\n            <button \n              type=\"button\" \n              class=\"keypad-button zero-button\"\n            @click.stop=\"inputNumber(0)\"\n            :disabled=\"disableAllInput || showWechatGuide\"\n          >0</button>\n            <button \n              type=\"button\" \n              class=\"keypad-button\"\n              @click.stop=\"inputDot\"\n              :disabled=\"disableAllInput || showWechatGuide\"\n            >.</button>\n          </div>\n          \n          <!-- 右侧按钮区域 -->\n          <div class=\"keypad-actions\">\n            <!-- 删除键 -->\n          <button \n            type=\"button\" \n            class=\"keypad-button delete-button\"\n            @click.stop=\"deleteNumber\"\n            :disabled=\"disableAllInput || showWechatGuide\"\n          >\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"29\" height=\"18.82\" viewBox=\"0 0 29 18.82\">\n              <path class=\"delete-icon-path\" d=\"M9.41,18.82a1.807,1.807,0,0,1-1.246-.5L.807,11.2A2.274,2.274,0,0,1,0,9.415a2.209,2.209,0,0,1,.8-1.78L8.164.5A1.807,1.807,0,0,1,9.41,0H25.39A3.522,3.522,0,0,1,29,3.411v12a3.517,3.517,0,0,1-3.607,3.411ZM2.03,8.794a.776.776,0,0,0-.283.624.806.806,0,0,0,.283.624L9.4,17.171H25.39a1.8,1.8,0,0,0,1.846-1.746V3.411A1.8,1.8,0,0,0,25.39,1.665H9.4Zm18.3,4-3.343-2.344-3.342,2.342a1.226,1.226,0,0,1-1.355,0,.533.533,0,0,1,0-.951L15.634,9.5,12.292,7.155A.6.6,0,0,1,12,6.68a.6.6,0,0,1,.292-.475,1.226,1.226,0,0,1,1.355,0l3.358,2.344L20.351,6.2a1.226,1.226,0,0,1,1.355,0,.541.541,0,0,1,0,.964L18.361,9.512l3.326,2.333a.533.533,0,0,1,0,.95,1.226,1.226,0,0,1-1.355,0Z\"/>\n            </svg>\n          </button>\n            \n            <!-- 确认支付按钮 -->\n            <button \n              type=\"button\" \n              class=\"confirm-pay-button\"\n              @click.stop=\"processPayment\"\n              :disabled=\"!isValidAmount || error || processing || showWechatGuide || (clientType === 'other' && selectedPaymentMethod === null) || isPreRunning\"\n            >\n              <template v-if=\"!isPreRunning\">确认支付</template>\n              <template v-else>通道初始化...</template>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 错误提示 -->\n      <div v-if=\"error\" class=\"error-message\">\n        {{ error }}\n      </div>\n\n      <!-- 加载状态 -->\n      <div v-if=\"loading\" class=\"loading-overlay\">\n        <div class=\"loading-container\">\n          <div class=\"loading-spinner\"></div>\n          <span class=\"loading-text\">正在加载支付信息...</span>\n        </div>\n      </div>\n\n\n      <!-- 添加进度条 -->\n      <div v-if=\"processing\" class=\"progress-overlay\">\n        <div class=\"progress-container\">\n          <div class=\"progress-bar\">\n            <div class=\"progress-fill\" :style=\"{ width: progressWidth + '%' }\"></div>\n          </div>\n          <div class=\"progress-text\">\n            {{ progressText }}\n          </div>\n        </div>\n      </div>\n\n      <!-- 公告弹窗 -->\n      <div \n        v-if=\"showAnnouncement && channelSettings?.announcement?.enabled\" \n        class=\"announcement-overlay\"\n      >\n        <div class=\"announcement-modal\" @click.stop>\n          <div class=\"announcement-header\">\n            <div class=\"header-icon\">\n              <i class=\"fas fa-bullhorn\"></i>\n            </div>\n            <h3>重要公告</h3>\n            <button class=\"close-btn\" @click=\"closeAnnouncement\">\n              <i class=\"fas fa-times\"></i>\n            </button>\n          </div>\n          <div class=\"announcement-content\">\n            {{ channelSettings.announcement.content }}\n          </div>\n          <div class=\"announcement-footer\">\n            <button class=\"confirm-btn\" @click=\"closeAnnouncement\">\n              <i class=\"fas fa-check\"></i>\n              <span>我已知晓</span>\n            </button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 修改客服组件的容器和条件 -->\n      <PaymentChat \n        v-if=\"shouldShowChat\"\n        :orderId=\"initialOrder.orderId\"\n        :key=\"initialOrder.orderId\"\n      />\n\n      <!-- 姓名输入弹窗 -->\n      <div v-if=\"showNameInput\" class=\"modal-overlay\">\n        <div class=\"name-input-modal\">\n          <h3>请输入姓名</h3>\n          <div class=\"input-group\">\n            <input \n              type=\"text\" \n              v-model=\"customerName\"\n              placeholder=\"请输入您的真实姓名\"\n              maxlength=\"20\"\n              @keyup.enter=\"confirmName\"\n            >\n            <p class=\"error-text\" v-if=\"nameError\">{{ nameError }}</p>\n          </div>\n          <div class=\"modal-buttons\">\n            <button \n              class=\"cancel-btn\" \n              @click=\"cancelNameInput\"\n            >取消</button>\n            <button \n              class=\"confirm-btn\" \n              @click=\"confirmName\"\n              :disabled=\"!isValidName\"\n            >确认</button>\n          </div>\n        </div>\n      </div>\n\n      <!-- 支付链接模态框 -->\n      <div v-if=\"showPaymentQRModal\" class=\"modal-overlay\" @click.stop>\n        <div class=\"payment-link-modal\">\n          <div class=\"modal-header\">\n            <h3>微信支付</h3>\n            <!-- 移除关闭按钮 -->\n            <!-- \n            <button class=\"close-btn\" @click=\"closePaymentLinkModal\">\n              <i class=\"fas fa-times\"></i>\n            </button> \n            -->\n          </div>\n          <div class=\"modal-content\">\n            <p class=\"modal-info\">请使用微信扫描以下二维码完成支付：</p>\n            \n            <!-- 显示二维码 -->\n            <div class=\"qr-code-container\">\n              <div v-if=\"qrCodeUrl\" class=\"qr-wrapper\">\n                <!-- 隐藏的canvas用于生成二维码 -->\n                <canvas ref=\"qrCanvas\" class=\"qr-canvas\" style=\"display: none;\"></canvas>\n                <!-- 用于显示二维码的图片 -->\n                <img v-if=\"qrImageSrc\" :src=\"qrImageSrc\" class=\"qr-image\" alt=\"微信支付二维码\" />\n                <div v-else class=\"qr-loading\">生成二维码中...</div>\n              </div>\n            </div>\n            \n            <p class=\"modal-secondary-info\">如果无法扫码支付，请复制以下链接到微信打开：</p>\n            \n            <div class=\"payment-link-container\">\n              <p class=\"payment-link\">{{ qrCodeText }}</p>\n              <button class=\"copy-btn\" @click=\"copyPaymentLink\">\n                <i class=\"fas fa-copy\"></i> 复制链接\n              </button>\n            </div>\n          </div>\n          <!-- 移除底部确认按钮 -->\n          <!-- \n          <div class=\"modal-footer\">\n            <button class=\"confirm-btn\" @click=\"closePaymentLinkModal\">\n              <span>我已知晓</span>\n            </button>\n          </div> \n          -->\n        </div>\n      </div>\n    </main>\n\n    <!-- 微信浏览器打开引导 (SVG弧形箭头样式) -->\n    <div v-if=\"showWechatGuide\" class=\"wechat-guide-overlay-svg\">\n      <div class=\"wechat-guide-content-svg\">\n        <!-- SVG 弧形箭头 -->\n        <svg class=\"guide-arrow-svg-curved\" width=\"120\" height=\"120\" viewBox=\"0 0 120 120\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n          <!-- 箭头头部（指向右上） -->\n          <path d=\"M90 20 L100 30\" stroke=\"white\" stroke-width=\"6\" stroke-linecap=\"round\"/>\n          <path d=\"M90 20 L80 30\" stroke=\"white\" stroke-width=\"6\" stroke-linecap=\"round\"/>\n          <!-- 弧形尾巴（从右上往左下弯） -->\n          <path d=\"M90 30 Q 60 100, 3 100\" stroke=\"white\" stroke-width=\"6\" stroke-linecap=\"round\" stroke-dasharray=\"10 8\" fill=\"none\"/>\n        </svg>\n        <p class=\"guide-text-svg\">请点击右上角 <span class=\"dots-svg\">...</span><br>选择<span class=\"highlight-svg\">「在浏览器中打开」</span></p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport { EventBus } from '@/eventBus'\nimport PaymentChat from '@/components/PaymentChat.vue'\n\nexport default {\n  name: 'PaymentPage',\n  components: {\n    PaymentChat\n  },\n  data() {\n    return {\n      amount: '',\n      channelId: '',\n      userId: '',\n      channelSettings: null,\n      error: null,\n      loading: true,\n      ipAddress: null,\n      disableAllInput: false, // Reverted default to false\n      qrCodeUrl: null,\n      clientType: null,\n      paymentType: null,\n      processing: false,\n      progressWidth: 0,\n      progressText: '正在初始化支付...',\n      progressTimer: null,\n      showAnnouncement: false,\n      initialOrder: null,\n      orderUpdating: false,\n      showChat: false,\n      showNameInput: false,\n      customerName: '',\n      nameError: '',\n      pendingOrder: null,\n      paymentTimer: null,\n      hasReceivedUrl: false,\n      proxyInfo: null,\n      showPaymentQRModal: false,\n      qrCodeText: null,\n      qrImageSrc: null,  // 添加图片源数据\n      isWechatBrowser: false,  // 是否为微信浏览器\n      showWechatGuide: false,  // 是否显示微信引导\n      showKeypad: false,\n      selectedPaymentMethod: null, // 添加支付方式选择\n      hxzfScriptRunning: false, // 新增：标记hxzf脚本是否正在运行\n      hxzfScriptId: null, // 新增：保存hxzf脚本ID\n      oldHxzfScriptRunning: false, // 新增：标记old_hxzf脚本是否正在运行\n      oldHxzfScriptId: null, // 新增：保存old_hxzf脚本ID\n      ipLocation: null, // 新增: 保存IP归属地信息\n      isPreRunning: false, // 新增：标记预执行脚本是否正在运行，防止重复执行\n    }\n  },\n  computed: {\n    isValidAmount() {\n      return this.amount && parseFloat(this.amount) > 0\n    },\n    formattedAmount() {\n      if (this.amount === '') return '0.00'\n      const parsedAmount = parseFloat(this.amount)\n      return isNaN(parsedAmount) ? '0.00' : parsedAmount.toFixed(2)\n    },\n    shouldShowChat() {\n      const shouldShow = !!(this.initialOrder && this.initialOrder.orderId && this.channelSettings?.chatFeature?.enabled);\n      return shouldShow;\n    },\n    isValidName() {\n      return this.customerName.trim().length >= 2;\n    }\n  },\n  methods: {\n    // 添加选择支付方式的方法\n    async selectPaymentMethod(methodType) {\n      this.selectedPaymentMethod = methodType;\n      this.paymentType = methodType;\n      \n      // 当用户选择支付方式后，触发预执行脚本\n      await this.triggerPreRunIfNeeded();\n    },\n    \n    async loadChannelSettings() {\n      try {\n        const response = await this.$api.get(`/api/channels/settings/${this.channelId}`, {\n          params: { userId: this.userId }\n        });\n        \n        this.channelSettings = response.data;\n        \n        // 如果启用了公告，显示公告弹窗\n        if (this.channelSettings.announcement?.enabled) {\n          this.showAnnouncement = true;\n        }\n\n        // 检查是否在微信浏览器中，以及是否启用了微信引导\n        this.isWechatBrowser = this.isWechatBrowserFunc();\n        \n        // 只有当在微信浏览器中，且通道是 f2f，且通道设置启用了微信引导时，才显示引导\n        if (this.isWechatBrowser && \n            this.channelSettings.identifier === 'f2f' && \n            this.channelSettings.customParams?.wechatGuideEnabled === true) {\n          this.showWechatGuide = true;\n        }\n        \n        // 确保 chatFeature 字段存在\n        this.channelSettings = {\n          ...response.data,\n          chatFeature: response.data.chatFeature || {\n            enabled: false\n          }\n        };\n        \n        // 检查通道状态\n        if (this.channelSettings.status !== '启用') {\n          this.error = '该通道已关闭';\n          this.disableAllInput = true;\n          return;\n        }\n\n        // 检查通道标识\n        if (!['ZFBZZ', 'ckxa', 'xlr', '98pay', 'wubai', 'xfzf', 'wfb', 'jtpay', 'hxzf', 'old_hxzf', '5zf', 'ydd', '003', 'lilipay', 'heishi', 'yilian', 'ysm', 'f2f', '213pay', 'golden', 'wxtoqq', 'hkrt', '76pay'].includes(this.channelSettings.identifier)) {\n          this.error = '无效的通道标识';\n          this.disableAllInput = true;\n          return;\n        }\n\n        // 检查是否设置了支付参数\n        if (!this.channelSettings.customParams?.userId) {\n          // 对于21lili支付通道,检查merchantId和key\n          if (this.channelSettings.identifier === 'lilipay') {\n            if (!this.channelSettings.customParams?.merchantId || !this.channelSettings.customParams?.key) {\n              this.error = '通道未配置商户ID或密钥';\n              this.disableAllInput = true;\n              return;\n            }\n          } else if (this.channelSettings.identifier === 'ysm') { // 添加易收米支付的检查\n            if (!this.channelSettings.customParams?.appid || !this.channelSettings.customParams?.appSecret) {\n              this.error = '通道未配置appid或appSecret';\n              this.disableAllInput = true;\n              return;\n            }\n          } else if (this.channelSettings.identifier === 'hkrt') { // 添加码钱支付的检查\n            if (!this.channelSettings.customParams?.token) {\n              this.error = '通道未配置Token';\n              this.disableAllInput = true;\n              return;\n            }\n          } else {\n            this.error = '通道未配置支付参数';\n            this.disableAllInput = true;\n            return;\n          }\n        }\n\n        // **新增：如果启用了姓名要求，显示姓名输入弹窗**\n        if (this.channelSettings.nameRequired?.enabled) {\n          this.showNameInput = true;\n        }\n\n        // 检查是否是76支付通道，如果是则执行代理脚本\n        if (this.channelSettings.identifier === '76pay') {\n          await this.runProxyScript();\n        }\n\n      } catch (error) {\n        console.error('Load channel settings error:', error);\n        if (error.response?.status === 404) {\n          this.error = '通道不存在';\n        } else {\n          this.error = error.response?.data?.message || '加载通道设置失败';\n        }\n        this.disableAllInput = true;\n      }\n    },\n    async getClientIP() {\n      try {\n        const response = await this.$api.get('/api/ip');\n        return response.data?.ip || '0.0.0.0';\n      } catch (error) {\n        console.error('Get IP error:', error);\n        return '0.0.0.0';\n      }\n    },\n    async checkIPBlocked() {\n      this.ipLocation = null; \n      if (!this.ipAddress) return false;\n      \n      try {\n        const response = await this.$api.get('/api/orders/check-ip', {\n          params: { \n            ipAddress: this.ipAddress,\n            userId: this.userId,\n            channelId: this.channelId\n          }\n        });\n        \n        // 存储IP归属地\n        if (response.data.ipLocation) {\n          this.ipLocation = response.data.ipLocation;\n          console.log('获取到IP归属地信息:', this.ipLocation); // 添加日志\n        }\n        \n        // 如果是内网IP，允许访问\n        if (response.data.isInternal) {\n          return false;\n        }\n        \n        // 检查IP是否被拉黑\n        if (response.data.blocked) {\n          let message = '您的IP已被拉黑';\n          if (response.data.reason) {\n            message += `\\n原因: ${response.data.reason}`;\n          }\n          if (response.data.blockedBy && response.data.sharedBlacklist) {\n            message += `\\n(来自共享黑名单)`;\n          }\n          this.error = message;\n          this.disableAllInput = true;\n          this.amount = '';\n          this.disablePayment = true;\n          return true;\n        }\n\n        // 检查地区是否被禁用\n        if (response.data.ipLocation && this.channelSettings?.regionBlacklist?.enabled) {\n          const { province, city } = response.data.ipLocation;\n          const { provinces, cities } = this.channelSettings.regionBlacklist;\n          \n          // 检查省份是否被禁用\n          if (provinces.includes(province)) {\n            this.error = '当前地区无法使用该支付通道';\n            this.disableAllInput = true;\n            this.amount = '';\n            this.disablePayment = true;\n            return true;\n          }\n          \n          // 如果设置了城市，则检查城市是否被禁用\n          if (cities && cities.length > 0) {\n            if (cities.includes(city)) {\n              this.error = '当前地区无法使用该支付通道';\n              this.disableAllInput = true;\n              this.amount = '';\n              this.disablePayment = true;\n              return true;\n            }\n          } else {\n            // 如果没有设置城市，但设置了省份，则检查是否在禁用省份列表中\n            if (provinces.includes(province)) {\n              this.error = '当前地区无法使用该支付通道';\n              this.disableAllInput = true;\n              this.amount = '';\n              this.disablePayment = true;\n              return true;\n            }\n          }\n        }\n\n        return false;\n      } catch (error) {\n        console.error('Check IP error:', error);\n        // 如果检查失败,不阻止访问\n        return false;\n      }\n    },\n    detectClient() {\n      const ua = navigator.userAgent.toLowerCase();\n      \n      if (/micromessenger|weixin|wechat/i.test(ua)) {\n        this.clientType = 'wechat';\n        this.paymentType = 1;  // 微信支付\n      } else if (/alipayclient/i.test(ua)) {\n        this.clientType = 'alipay';\n        this.paymentType = 2;  // 支付宝支付\n      } else {\n        this.clientType = 'other';\n        \n        // 仅在非 f2f 通道且显式禁止其他客户端时显示错误\n        if (this.channelSettings?.identifier !== 'f2f' && \n            this.channelSettings?.customParams?.disableOutsideBrowser === true) {\n          this.error = '使用微信或支付宝客户端访问';\n          this.disableAllInput = true;\n        } else {\n          // 初始不设置支付方式，让用户选择\n          this.paymentType = null;\n        }\n      }\n    },\n    closeAnnouncement() {\n      this.showAnnouncement = false;\n    },\n    inputNumber(num) {\n      if (this.disableAllInput) return;\n      if (this.amount.includes('.') && this.amount.split('.')[1].length >= 2) return;\n      if (this.amount.length >= 9) return;\n      if (this.amount === '0' && num !== 0) {\n        this.amount = num.toString();\n      } else {\n        this.amount += num.toString();\n      }\n    },\n    inputDot() {\n      if (this.disableAllInput) return;\n      if (this.amount === '') {\n        this.amount = '0.';\n      } else if (!this.amount.includes('.')) {\n        this.amount += '.';\n      }\n    },\n    deleteNumber() {\n      if (this.disableAllInput) return;\n      this.amount = this.amount.slice(0, -1);\n    },\n    async processPayment() {\n      if (!this.isValidAmount || this.disableAllInput || this.processing || this.isPreRunning) return;\n      \n      // 检查是否在非微信/支付宝环境下未选择支付方式\n      if (this.clientType === 'other' && this.selectedPaymentMethod === null) {\n        this.error = '请选择支付方式';\n        return;\n      }\n\n      // 如果是hxzf或old_hxzf通道，且支付方式已确定，触发预执行脚本\n      await this.triggerPreRunIfNeeded();\n      \n      // 如果预执行脚本正在运行，不继续处理支付\n      if (this.isPreRunning) return;\n\n      try {\n        this.processing = true;\n        this.error = null;\n        \n        // 【性能优化】在处理支付前不再重复检查 IP 状态。\n        // IP状态已在页面加载时的 created() 钩子中检查过。\n        // 如果IP被拉黑，输入和支付按钮在页面加载时就已被禁用，因此此处的重复检查是多余的，且会造成不必要的延迟。\n        // const isBlocked = await this.checkIPBlocked();\n        // if (isBlocked) {\n        //   this.error = '您的 IP 已被拉黑,无法继续支付';\n        //   this.disableAllInput = true;\n        //   this.stopProgressBar(false);\n        //   return;\n        // }\n\n        this.startProgressBar();\n\n        // 修改客户端检查逻辑：如果是other客户端但未选择支付方式，提示选择\n        if (this.clientType === 'other' && !this.selectedPaymentMethod) {\n          this.error = '请选择支付方式';\n          this.stopProgressBar(false); // 停止进度条\n          return;\n        }\n\n        // 发送WebSocket消息，包含金额和通道标识\n        if (this.$socket && this.initialOrder) {\n          try {\n            // 构建与示例格式相同的newOrder消息\n            const orderData = {\n              ...this.initialOrder,\n              amount: parseFloat(this.amount),   // 添加金额\n              originalAmount: parseFloat(this.amount),\n              status: \"pending\",\n              amountUpdatedAt: new Date().toISOString()\n            };\n            \n            // 发送newOrder消息\n            this.$socket.emit(\"newOrder\", orderData);\n          } catch (error) {\n            console.error('发送newOrder WebSocket消息失败:', error);\n            // 继续执行支付流程，不阻止支付\n          }\n        }\n\n        // 更新订单金额，不需要认证头\n        const response = await this.$api.put(\n          `/api/orders/${this.initialOrder.orderId}/amount`,\n          { \n            amount: parseFloat(this.amount),\n            originalAmount: parseFloat(this.amount) // 添加原始金额\n          },\n          { skipAuthHeader: true }\n        );\n\n        // 根据通道处理支付\n        let paymentResponse;\n        try {\n          switch (this.channelSettings.identifier) {\n            case 'ckxa':\n              paymentResponse = await this.handleCkxaPayment(response.data.order);\n              break;\n            case 'xlr':\n              paymentResponse = await this.handleXlrPayment(response.data.order);\n              break;\n            case '98pay':\n              try {\n                paymentResponse = await this.handle98Payment(response.data.order);\n                // 添加额外的响应验证\n                if (!paymentResponse?.data?.payUrl) {\n                  console.error('Invalid 98pay response:', paymentResponse);\n                  throw new Error('支付链接获取失败');\n                }\n                // 验证链接格式\n                const payUrl = paymentResponse.data.payUrl;\n                if (!payUrl.startsWith('http')) {\n                  console.error('Invalid pay URL format:', payUrl);\n                  throw new Error('支付链接格式无效');\n                }\n              } catch (error) {\n                console.error('98pay payment failed:', error);\n                throw new Error(error.message || '支付请求失败，请重试');\n              }\n              break;\n            case 'ZFBZZ':\n              if (this.clientType !== 'alipay') {\n                throw new Error('此通道仅支持支付宝支付');\n              }\n              paymentResponse = await this.handleZfbzzPayment(response.data.order);\n              break;\n            case 'wubai':\n              paymentResponse = await this.handleWubaiPayment(response.data.order);\n              break;\n            case 'xfzf':\n              paymentResponse = await this.handleXfzfPayment(response.data.order);\n              break;\n            case 'wfb':\n              paymentResponse = await this.handleWfbPayment(response.data.order);\n              break;\n            case 'jtpay':\n              paymentResponse = await this.handleJtpayPayment(response.data.order);\n              break;\n            case 'hxzf':\n              paymentResponse = await this.handleHxzfPayment(response.data.order);\n              break;\n            case 'old_hxzf':\n              paymentResponse = await this.handleOldHxzfPayment(response.data.order);\n              break;\n            case '5zf':\n              paymentResponse = await this.handle5zfPayment(response.data.order);\n              break;\n            case 'ydd':  // 添加云订单支付\n              paymentResponse = await this.handleYddPayment(response.data.order);\n              break;\n            case '003':  // 添加003支付\n              paymentResponse = await this.handle003Payment(response.data.order);\n              break;\n            case 'lilipay':\n              paymentResponse = await this.handleLiliPayment(response.data.order);\n              break;\n            case 'heishi':\n              paymentResponse = await this.handleHeishiPayment(response.data.order);\n              break;\n            case 'yilian':\n              paymentResponse = await this.handleYilianPayment(response.data.order);\n              break;\n            case 'ysm': // 添加易收米支付处理\n              paymentResponse = await this.handleYsmPayment(response.data.order);\n              break;\n            case 'f2f':\n              // 显示等待进度条\n              this.startProgressBar(60); // 20秒倒计时\n              await new Promise(resolve => setTimeout(resolve, 60000)); // 等待20秒\n              \n              paymentResponse = await this.handleF2fPayment(response.data.order);\n              break;\n            case '213pay':\n              paymentResponse = await this.handle213Payment(response.data.order);\n              break;\n            case 'golden':\n              paymentResponse = await this.handleGoldenPayment(response.data.order);\n              break;\n            case 'wxtoqq':\n              paymentResponse = await this.handleWxToQqPayment(response.data.order);\n              break;\n            case 'hkrt':\n              paymentResponse = await this.handleHkrtPayment(response.data.order);\n              break;\n            case '76pay':\n              paymentResponse = await this.handle76Payment(response.data.order);\n              break;\n            default:\n              throw new Error(`不支持的支付通道: ${this.channelSettings.identifier}`);\n          }\n\n          // 支付处理成功后，确保链接有效\n          const finalPayUrl = paymentResponse.data.payUrl;\n          if (!finalPayUrl) {\n            throw new Error('获取到的支付链接无效');\n          }\n\n          // 检查链接格式，支持http、alipays、weixin和data URI协议\n          const isValidUrl = finalPayUrl.startsWith('http') || \n                            finalPayUrl.startsWith('alipays://') || \n                            finalPayUrl.startsWith('weixin://') ||\n                            finalPayUrl.startsWith('data:text/html');\n\n          if (!isValidUrl) {\n            throw new Error('获取到的支付链接格式无效');\n          }\n\n          // 成功处理\n          this.stopProgressBar(true);\n          await this.notifyMerchantAfterScan();\n          this.error = null;\n\n          // 使用 setTimeout 确保状态更新完成后再跳转\n          setTimeout(() => {\n            // 检查是否是data URI格式的HTML页面\n            if (finalPayUrl.startsWith('data:text/html')) {\n              // 对于HTML内容，使用iframe或新窗口打开\n              const newWindow = window.open('', '_blank');\n              if (newWindow) {\n                newWindow.document.write(decodeURIComponent(finalPayUrl.split(',')[1]));\n                newWindow.document.close();\n              } else {\n                // 如果浏览器阻止弹窗，则尝试在当前页面加载\n                document.open();\n                document.write(decodeURIComponent(finalPayUrl.split(',')[1]));\n                document.close();\n              }\n            } else if (this.clientType === 'other' && this.selectedPaymentMethod === 1) {\n              // 非微信/支付宝环境且选择了微信支付，显示二维码\n              this.showPaymentQRModal = true;\n              this.qrCodeUrl = finalPayUrl;\n              this.qrCodeText = finalPayUrl;\n              // 显示用户提示\n              this.$notify({\n                title: '微信支付',\n                message: '请使用微信扫描二维码完成支付',\n                type: 'info',\n                duration: 5000,\n                showClose: true\n              });\n            } else {\n              // 对于其他支付链接，直接跳转\n              window.location.href = finalPayUrl;\n            }\n          }, 100);\n\n        } catch (error) {\n          console.error('Payment processing error:', error);\n          this.stopProgressBar(false);\n          throw error;\n        }\n\n      } catch (error) {\n        console.error('支付处理失败:', error);\n        this.error = error.response?.data?.message || error.message || '支付请求失败，请重试';\n        this.stopProgressBar(false);\n      }\n    },\n    startProgressBar() {\n      this.progressWidth = 0;\n      this.progressText = '正在初始化支付...';\n      \n      // 快速增长到30%\n      const quickProgress = setInterval(() => {\n        if (this.progressWidth < 30) {\n          this.progressWidth += 2; // 快速增长\n        } else {\n          clearInterval(quickProgress);\n          // 启动慢速进度\n          this.startSlowProgress();\n        }\n      }, 30);\n    },\n    startSlowProgress() {\n      this.progressTimer = setInterval(() => {\n        if (this.progressWidth < 85) {\n          // 根据进度阶段调整增长速度\n          if (this.progressWidth < 50) {\n            this.progressWidth += 0.4;\n            this.progressText = '正在获取支付通道...';\n          } else if (this.progressWidth < 70) {\n            this.progressWidth += 0.3;\n            this.progressText = '正在生成支付链接...';\n          } else {\n            this.progressWidth += 0.2;\n            this.progressText = '即将完成...';\n          }\n        }\n      }, 100);\n    },\n    stopProgressBar(success = true) {\n      clearInterval(this.progressTimer);\n      \n      if (success) {\n        // 快速完成剩余进度\n        const completeProgress = setInterval(() => {\n          if (this.progressWidth < 100) {\n            this.progressWidth += 3;\n          } else {\n            clearInterval(completeProgress);\n            this.progressText = '支付链接获取成功!';\n            this.processing = false;\n          }\n        }, 20);\n      } else {\n        this.progressText = '支付链接获取失败,请重试';\n        this.processing = false;\n      }\n    },\n    async handleCkxaPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/ckxa-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n\n        return this.validatePaymentResponse(response, 'ckxa');\n      } catch (error) {\n        return this.handlePaymentError(error, 'ckxa');\n      }\n    },\n    async handleXlrPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/xlr-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType,\n            partitionId: this.channelSettings.customParams.userId\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n\n        return this.validatePaymentResponse(response, 'xlr');\n      } catch (error) {\n        return this.handlePaymentError(error, 'xlr');\n      }\n    },\n    async handleZfbzzPayment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/zfbzz-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handle98Payment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/98pay-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            // 增加超时时间\n            timeout: 30000,\n            // 增加重试配置\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n\n        // 检查响应格式\n        if (!response.data) {\n          throw new Error('支付请求返回数据无效');\n        }\n\n        // 确保返回的支付链接是有效的URL\n        const payUrl = response.data.payUrl;\n        if (!payUrl) {\n          throw new Error('返回的支付链接无效');\n        }\n\n        // 检查链接格式，支持http和alipays协议\n        const isValidUrl = payUrl.startsWith('http') || \n                           payUrl.startsWith('alipays://') || \n                           payUrl.startsWith('weixin://') ||\n                           payUrl.startsWith('data:text/html');\n\n        if (!isValidUrl) {\n          throw new Error(`98pay返回的支付链接格式无效`);\n        }\n\n        // 返回处理后的响应\n        return {\n          data: {\n            payUrl: payUrl\n          }\n        };\n\n      } catch (error) {\n        console.error('98pay payment error:', error);\n        // 提供更具体的错误信息\n        if (error.message.includes('timeout')) {\n          throw new Error('支付请求超时，请重试');\n        } else if (error.message.includes('Network Error')) {\n          throw new Error('网络连接失败，请检查网络设置后重试');\n        } else {\n          throw error;\n        }\n      }\n    },\n    async handleWubaiPayment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/wubai-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handleXfzfPayment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/xfzf-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handleWfbPayment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/wfb-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handleJtpayPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/jtpay-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n\n        return this.validatePaymentResponse(response, 'jtpay');\n      } catch (error) {\n        return this.handlePaymentError(error, 'jtpay');\n      }\n    },\n    async handleHxzfPayment(order) {\n      try {\n        // 检查是否已经预执行了脚本\n        if (this.hxzfScriptRunning) {\n          // 向后端发送用户输入的金额，补充给等待中的脚本\n          const response = await this.$api.post(\n            `/api/channels/${this.channelSettings.identifier}/hxzf-payment-continue`,\n            {\n              amount: this.amount,\n              orderId: order.orderId,\n              userId: this.userId,\n              paymentType: this.paymentType,\n              scriptId: this.hxzfScriptId // 传递脚本ID，用于标识哪个脚本进程\n            },\n            { \n              skipAuthHeader: true,\n              timeout: 30000,\n              retry: 3,\n              retryDelay: 1000\n            }\n          );\n          \n          return this.validatePaymentResponse(response, 'hxzf');\n        } else {\n          // 如果没有预执行脚本，使用原有逻辑\n          const response = await this.$api.post(\n            `/api/channels/${this.channelSettings.identifier}/hxzf-payment`,\n            {\n              amount: this.amount,\n              orderId: order.orderId,\n              userId: this.userId,\n              paymentType: this.paymentType\n            },\n            { \n              skipAuthHeader: true,\n              timeout: 30000,\n              retry: 3,\n              retryDelay: 1000\n            }\n          );\n          \n          return this.validatePaymentResponse(response, 'hxzf');\n        }\n      } catch (error) {\n        return this.handlePaymentError(error, 'hxzf');\n      }\n    },\n    async handleOldHxzfPayment(order) {\n      try {\n        // 检查是否已经预执行了脚本\n        if (this.oldHxzfScriptRunning) {\n          // 向后端发送用户输入的金额，补充给等待中的脚本\n          const response = await this.$api.post(\n            `/api/channels/${this.channelSettings.identifier}/old-hxzf-payment-continue`,\n            {\n              amount: this.amount,\n              orderId: order.orderId,\n              userId: this.userId,\n              paymentType: this.paymentType,\n              scriptId: this.oldHxzfScriptId // 传递脚本ID\n            },\n            { \n              skipAuthHeader: true,\n              timeout: 30000,\n              retry: 3,\n              retryDelay: 1000\n            }\n          );\n          \n          return this.validatePaymentResponse(response, 'old_hxzf');\n        } else {\n          // 如果没有预执行脚本，使用原有逻辑\n          const response = await this.$api.post(\n            `/api/channels/${this.channelSettings.identifier}/old_hxzf-payment`,\n            {\n              amount: this.amount,\n              orderId: order.orderId,\n              userId: this.userId,\n              paymentType: this.paymentType\n            },\n            { \n              skipAuthHeader: true,\n              timeout: 30000,\n              retry: 3,\n              retryDelay: 1000\n            }\n          );\n          \n          return this.validatePaymentResponse(response, 'old_hxzf');\n        }\n      } catch (error) {\n        return this.handlePaymentError(error, 'old_hxzf');\n      }\n    },\n    async handle5zfPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/5zf-payment`,\n          {\n            amount: this.amount,\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n        \n        return this.validatePaymentResponse(response, '5zf');\n      } catch (error) {\n        return this.handlePaymentError(error, '5zf');\n      }\n    },\n    async handleYddPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/ydd-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n        \n        return this.validatePaymentResponse(response, 'ydd');\n      } catch (error) {\n        return this.handlePaymentError(error, 'ydd');\n      }\n    },\n    async handle003Payment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/003-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handleLiliPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/lilipay-payment`,\n          {\n            amount: parseFloat(this.amount), // 发送原始金额，由服务器处理扣减\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { skipAuthHeader: true }\n        );\n\n        if (!response.data.success) {\n          throw new Error(response.data.message || '支付请求失败');\n        }\n\n        return {\n          data: {\n            payUrl: response.data.payUrl\n          }\n        };\n      } catch (error) {\n        console.error('Lilipay payment error:', error);\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },\n    async handleHeishiPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/heishi-payment`,\n          {\n            amount: this.amount,\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n        \n        return this.validatePaymentResponse(response, 'heishi');\n      } catch (error) {\n        return this.handlePaymentError(error, 'heishi');\n      }\n    },\n    async handleYilianPayment(order) {\n      return await this.$api.post(\n        `/api/channels/${this.channelSettings.identifier}/yilian-payment`,\n        {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        },\n        { skipAuthHeader: true }\n      );\n    },\n    async handleYsmPayment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/ysm-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n        \n        return this.validatePaymentResponse(response, 'ysm');\n      } catch (error) {\n        return this.handlePaymentError(error, 'ysm');\n      }\n    },\n    async handleF2fPayment(order) {\n      try {\n        // 显示等待进度条\n        this.startProgressBar(20); // 20秒倒计时\n        \n        const response = await this.$api.post(\n          `/api/channels/f2f/payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId\n          }\n        );\n\n        if (!response.data.success) {\n          throw new Error(response.data.message || '支付请求失败');\n        }\n\n        // 如果直接返回了支付链接，就直接跳转\n        if (response.data.payUrl) {\n          this.stopProgressBar(true);\n          // 添加发送通知消息\n          await this.notifyMerchantAfterScan();\n          window.location.href = response.data.payUrl;\n          return;\n        }\n\n        // 否则等待扫码结果\n        return {\n          data: {\n            payUrl: 'waiting'  // 特殊标记，表示等待扫码\n          }\n        };\n      } catch (error) {\n        this.stopProgressBar(false);\n        console.error('F2F payment error:', error);\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },\n    async handleGoldenPayment(order) {\n      try {\n        // 生成随机扣减金额 (0.01 到 0.09)\n        const deduction = Math.floor(Math.random() * 9 + 1) / 100;\n        const originalAmount = (parseFloat(this.amount) - deduction).toFixed(2);\n\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/golden-payment`,\n          {\n            amount: parseFloat(this.amount), \n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType,\n            originalAmount: parseFloat(originalAmount) \n          },\n          { skipAuthHeader: true }\n        );\n\n        if (!response.data.success) {\n          throw new Error(response.data.message || '支付请求失败');\n        }\n\n        // 获取服务器返回的支付链接\n        const { payUrl } = response.data;\n        if (!payUrl) {\n          throw new Error('获取到的支付链接无效');\n        }\n\n        // 检查链接格式\n        if (!payUrl.startsWith('alipays://')) {\n          throw new Error('支付链接格式无效');\n        }\n\n        // 直接返回支付链接\n        return {\n          data: {\n            payUrl: payUrl\n          }\n        };\n      } catch (error) {\n        console.error('Golden payment error:', error);\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },\n    async handleHkrtPayment(order) {\n      try {  \n        // 定义originalAmount变量，直接使用当前金额\n        const originalAmount = this.amount;\n\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/hkrt-payment`,\n          {\n            amount: parseFloat(this.amount), \n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType,\n            originalAmount: parseFloat(originalAmount) \n          },\n          { skipAuthHeader: true }\n        );\n\n        if (!response.data.success) {\n          throw new Error(response.data.message || '支付请求失败');\n        }\n\n        // 获取服务器返回的支付链接\n        const payUrl = response.data.data?.payUrl;\n        if (!payUrl) {\n          throw new Error('获取到的支付链接无效');\n        }\n\n        // 检查链接格式，支持http协议（红快支付链接）\n        if (!payUrl.startsWith('http')) {\n          throw new Error('支付链接格式无效');\n        }\n\n        // 返回支付链接，保持统一格式\n        return {\n          data: {\n            payUrl: payUrl\n          }\n        };\n      } catch (error) {\n        console.error('HKRT payment error:', error);\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },  \n    \n    async handleWxToQqPayment(order) {\n      try {\n        // 生成随机扣减金额 (0.01 到 0.09)\n        const deduction = Math.floor(Math.random() * 9 + 1) / 100;\n        const originalAmount = (parseFloat(this.amount) - deduction).toFixed(2);\n\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/wxtoqq-payment`,\n          {\n            amount: parseFloat(this.amount), \n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType,\n            originalAmount: parseFloat(originalAmount) \n          },\n          { skipAuthHeader: true }\n        );\n\n        if (!response.data.success) {\n          throw new Error(response.data.message || '支付请求失败');\n        }\n\n        // 获取服务器返回的支付链接\n        const { paymentUrl } = response.data.data;\n        if (!paymentUrl) {\n          throw new Error('获取到的支付链接无效');\n        }\n\n        // 返回支付链接\n        return {\n          data: {\n            payUrl: paymentUrl\n          }\n        };\n      } catch (error) {\n        console.error('WxToQq payment error:', error);\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },\n    async notifyMerchantAfterScan() {\n      try {\n        // 发送通知消息\n        await this.$api.post(`/api/messages/${this.initialOrder.orderId}`, {\n          content: `用户已扫描支付码，等待支付`,\n          sender: 'user'\n        });\n      } catch (error) {\n        console.error('发送扫码通知失败:', error);\n      }\n    },\n    // 添加定期检查 IP 状态的方法\n    startIPStatusCheck() {\n      // 每30秒检查一次IP状态\n      this.ipCheckInterval = setInterval(async () => {\n        const isBlocked = await this.checkIPBlocked();\n        if (isBlocked) {\n          // 清除检查间隔\n          clearInterval(this.ipCheckInterval);\n        }\n      }, 30000);\n    },\n    // 添加统一的响应验证方法\n    validatePaymentResponse(response, channel) {\n      if (!response.data) {\n        throw new Error(`${channel}支付请求返回数据无效`);\n      }\n\n      const payUrl = response.data.payUrl;\n      if (!payUrl) {\n        throw new Error(`${channel}返回的支付链接无效`);\n      }\n\n      // 检查链接格式，支持http、alipays、weixin和data URI协议\n      const isValidUrl = payUrl.startsWith('http') || \n                         payUrl.startsWith('alipays://') || \n                         payUrl.startsWith('weixin://') ||\n                         payUrl.startsWith('data:text/html');\n\n      if (!isValidUrl) {\n        throw new Error(`${channel}返回的支付链接格式无效`);\n      }\n\n      return {\n        data: {\n          payUrl: payUrl\n        }\n      };\n    },\n    // 添加统一的错误处理方法\n    handlePaymentError(error, channel) {\n      console.error(`${channel} payment error:`, error);\n      \n      if (error.message.includes('timeout')) {\n        throw new Error('支付请求超时，请重试');\n      } else if (error.message.includes('Network Error')) {\n        throw new Error('网络连接失败，请检查网络设置后重试');\n      } else {\n        throw new Error(error.response?.data?.message || error.message || '支付请求失败，请重试');\n      }\n    },\n    async createInitialOrder() {\n      try {\n        // 检查通道设置中的地区限制\n        if (this.channelSettings?.regionBlacklist?.enabled) {\n          // 检查是否是内网IP\n          const isInternalIP = this.ipAddress.startsWith('192.168.') || \n                             this.ipAddress.startsWith('10.') || \n                             this.ipAddress.startsWith('172.') ||\n                             this.ipAddress === '127.0.0.1';\n          \n          if (!isInternalIP) {\n            try {\n              const ipResponse = await this.$api.get('/api/orders/check-ip', {\n                params: { \n                  ipAddress: this.ipAddress,\n                  userId: this.userId,\n                  channelId: this.channelId\n                }\n              });\n\n              if (ipResponse.data.ipLocation) {\n                const { province, city } = ipResponse.data.ipLocation;\n                const { provinces, cities } = this.channelSettings.regionBlacklist;\n\n                // 检查省份是否被禁用\n                if (provinces.includes(province)) {\n                  this.error = '当前地区无法使用该支付通道';\n                  this.disableAllInput = true;\n                  return;\n                }\n\n                // 如果设置了城市，则检查城市否被禁用\n                if (cities && cities.length > 0) {\n                  if (cities.includes(city)) {\n                    this.error = '当前地区无法使用该支付通道';\n                    this.disableAllInput = true;\n                    return;\n                  }\n                } else {\n                  // 如果没有设置城市，但设置了省份，则检查是否在禁用省份列表中\n                  if (provinces.includes(province)) {\n                    this.error = '当前地区无法使用该支付通道';\n                    this.disableAllInput = true;\n                    return;\n                  }\n                }\n              }\n            } catch (ipError) {\n              console.error('IP地区检查失败:', ipError);\n              // 如果是内网IP或IP检查失败，继续允许访问\n            }\n          }\n        }\n\n        // 创建初始订单\n        const response = await this.$api.post('/api/orders/create', {\n          amount: null,\n          channelId: this.channelId,\n          userId: this.userId,\n          ipAddress: this.ipAddress,\n          clientType: this.clientType // 添加 clientType\n        });\n\n        if (!response.data.order) {\n          throw new Error('创建订单失败：返回数据无效');\n        }\n\n        this.initialOrder = response.data.order;\n        \n        // 发送在线状态\n        if (this.$socket && this.initialOrder.orderId) {\n          try {\n            // 修改: 直接发送 orderId 字符串,而不是对象\n            this.$socket.emit('join-chat', this.initialOrder.orderId);\n            \n            // 修改: 使用正确的事件名格式\n            const eventName = `user-online:${this.initialOrder.orderId}`;\n            this.$socket.emit(eventName, { status: 'online' });\n            \n            // 添加心跳检测\n            this.startHeartbeat();\n          } catch (error) {\n            console.error('Socket emit error:', error);\n          }\n        }\n        \n      } catch (error) {\n        console.error('创建初始订单失败:', error);\n        const errorMessage = error.response?.data?.message || \n                           error.message || \n                           '创建初始订单失败';\n        this.error = errorMessage;\n        this.disableAllInput = true;\n      }\n    },\n    async handlePayment() {\n      try {\n        if (this.disableAllInput) return;\n        \n        // 创建订单\n        const order = await this.createOrder();\n        \n        // 继续处理支付\n        await this.processPayment(order);\n      } catch (error) {\n        this.handlePaymentError(error);\n      }\n    },\n    async createOrder() {\n      const orderData = {\n        amount: parseFloat(this.amount),\n        channelId: this.channelId,\n        userId: this.userId,\n        customerName: this.customerName.trim() || null,\n        clientType: this.clientType, // 添加 clientType\n      };\n\n      const response = await this.$api.post('/api/orders/create', orderData);\n      return response.data.order;\n    },\n    async confirmName() {\n      if (!this.isValidName) {\n        this.nameError = '请输入有效的姓名（至少2个字符）';\n        return;\n      }\n\n      try {\n        // 更新初始订单的姓名\n        const response = await this.$api.put(`/api/orders/${this.initialOrder.orderId}`, {\n          customerName: this.customerName.trim()\n        });\n\n        // 检查响应是否成功\n        if (response.data && response.data.message === '订单更新成功') {\n          // 更新本地订单数据\n          if (response.data.order) {\n            this.initialOrder = response.data.order;\n          }\n          \n          this.showNameInput = false;\n          this.nameError = '';\n          \n          // 不再创建新订单，直接处理支付\n          await this.processPayment(this.initialOrder);\n        } else {\n          throw new Error('更新失败');\n        }\n        \n      } catch (error) {\n        console.error('更新姓名失败:', error);\n        this.nameError = '姓名保存失败，请重试';\n      }\n    },\n    cancelNameInput() {\n      this.showNameInput = false;\n      this.customerName = '';\n      this.nameError = '';\n      // **新增：取消姓名输入时，可以考虑跳转回首页或错误页，这里先简单处理**\n      this.error = '已取消姓名输入，无法继续支付。';\n      this.disableAllInput = true; // 禁用所有输入\n    },\n    // 添加心跳检测方法\n    startHeartbeat() {\n      // 每30秒发送一次心跳\n      this.heartbeatTimer = setInterval(() => {\n        if (this.$socket && this.initialOrder?.orderId) {\n          try {\n            const eventName = `user-online:${this.initialOrder.orderId}`;\n            this.$socket.emit(eventName, { status: 'online' });\n          } catch (error) {\n            console.error('Heartbeat error:', error);\n          }\n        }\n      }, 30000);\n    },\n    // 停止心跳检测\n    stopHeartbeat() {\n      if (this.heartbeatTimer) {\n        clearInterval(this.heartbeatTimer);\n        this.heartbeatTimer = null;\n      }\n    },\n    // 添加页面可见性变化处理方法\n    handleVisibilityChange() {\n      if (document.visibilityState === 'visible') {\n        // 页面变为可见时重新发送在线状态\n        if (this.$socket && this.initialOrder?.orderId) {\n          // 重新加入房间\n          this.$socket.emit('join-chat', this.initialOrder.orderId);\n          \n          // 发送在线状态\n          const eventName = `user-online:${this.initialOrder.orderId}`;\n          this.$socket.emit(eventName, { \n            status: 'online',\n            timestamp: Date.now(),\n            responderId: this.initialOrder.userId\n          });\n        }\n      }\n    },\n    handleBeforeUnload() {\n      // Page unload, send offline status\n      if (this.$socket && this.initialOrder?.orderId) {\n        const eventName = `user-online:${this.initialOrder.orderId}`;\n        this.$socket.emit(eventName, {\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        });\n\n        // Use sendBeacon to ensure message delivery\n        const data = {\n          orderId: this.initialOrder.orderId,\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        };\n\n        if (navigator.sendBeacon) {\n          // Modified: Ensure sendBeacon sends to /api/user-offline\n          navigator.sendBeacon('/api/user-offline', JSON.stringify(data));\n        }\n      }\n    },\n    startPaymentTimer() {\n      this.paymentTimer = setTimeout(() => {\n        if (!this.hasReceivedUrl) {\n          // 20秒内没收到支付链接，显示支付失败\n          this.$message.error('支付超时，请重试');\n          this.$router.push('/payment-failed');\n        }\n      }, 20000);\n    },\n    handlePaymentUrl({ orderId, payUrl }) {\n      // 确认订单ID匹配\n      if (orderId === this.initialOrder.orderId) {\n        this.hasReceivedUrl = true;\n        // 清除定时器\n        if (this.paymentTimer) {\n          clearTimeout(this.paymentTimer);\n        }\n        // 立即跳转到支付链接\n        window.location.href = payUrl;\n      }\n    },\n    async handle213Payment(order) {\n      try {\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/213pay-payment`,\n          {\n            amount: parseFloat(this.amount),\n            orderId: order.orderId,\n            userId: this.userId,\n            paymentType: this.paymentType\n          },\n          { skipAuthHeader: true }\n        );\n        return response;\n      } catch (error) {\n        console.error('213pay payment error:', error);\n        throw error;\n      }\n    },\n    async handle76Payment(order) {\n      try {\n        // 构建请求参数\n        const requestData = {\n          amount: parseFloat(this.amount),\n          orderId: order.orderId,\n          userId: this.userId,\n          paymentType: this.paymentType\n        };\n        \n        // 如果已经获取到代理，添加到请求中\n        if (this.proxyInfo) {\n          requestData.proxyInfo = this.proxyInfo;\n        }\n\n        // 手动管理进度条，避免自动完成\n        clearInterval(this.progressTimer);\n        this.progressText = '正在处理76支付请求...';\n        \n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/76-payment`,\n          requestData,\n          { \n            skipAuthHeader: true,\n            timeout: 30000,\n            retry: 3,\n            retryDelay: 1000\n          }\n        );\n        \n        // 设置进度但不自动完成\n        this.progressWidth = 85;\n        this.progressText = '正在准备支付环境...';\n        return this.validatePaymentResponse(response, '76pay');\n      } catch (error) {\n        return this.handlePaymentError(error, '76pay');\n      }\n    },\n    \n    // 添加执行76支付代理脚本的方法\n    async runProxyScript() {\n      try {\n        \n        // 显示加载指示器或提示\n        this.startProgressBar();\n        \n        // 获取IP地址归属地信息\n        let province = '未知';\n        let city = '未知';\n        \n        try {\n          const ipResponse = await this.$api.get('/api/orders/check-ip', {\n            params: { \n              ipAddress: this.ipAddress,\n              userId: this.userId,\n              channelId: this.channelId\n            }\n          });\n          \n          if (ipResponse.data && ipResponse.data.ipLocation) {\n            province = ipResponse.data.ipLocation.province || '未知';\n            city = ipResponse.data.ipLocation.city || '未知';\n          } else {\n            console.warn('未能获取到IP归属地信息');\n          }\n        } catch (ipError) {\n          // 忽略IP归属地获取错误，使用默认值\n          console.warn('获取IP归属地信息失败:', ipError);\n        }\n        \n        // 调用后端API执行脚本\n        const response = await this.$api.post('/api/channels/proxy/run-script', {\n          script: 'get_proxy.py',\n          args: [\n            '--url', 'http://cqzfpay.com/game/choose/',\n            '--province', province,\n            '--city', city\n          ],\n          userId: this.userId\n        });\n        \n        // 处理脚本执行结果\n        \n        // 如果成功获取到代理，可以存储到本地或显示提示\n        if (response.data.success && response.data.proxy) {\n          // 可以将代理信息存储起来，方便支付时使用\n          this.proxyInfo = response.data.proxy;\n          this.stopProgressBar(true);\n          \n\n        } else {\n          this.stopProgressBar(false);\n          // 不显示错误信息给用户\n        }\n      } catch (error) {\n        console.error('执行代理脚本错误:', error);\n        this.stopProgressBar(false);\n        // 不要显示错误给用户，静默失败\n      }\n    },\n    copyPaymentLink() {\n      // 实现复制支付链接的逻辑\n      try {\n        // 创建临时输入框用于复制\n        const tempInput = document.createElement('textarea');\n        tempInput.value = this.qrCodeText;\n        document.body.appendChild(tempInput);\n        tempInput.select();\n        document.execCommand('copy');\n        document.body.removeChild(tempInput);\n        \n        // 显示复制成功提示\n        this.$notify({\n          title: '复制成功',\n          message: '支付链接已复制到剪贴板',\n          type: 'success',\n          duration: 2000\n        });\n      } catch (error) {\n        console.error('复制链接失败:', error);\n        // 显示复制失败提示\n        this.$notify({\n          title: '复制失败',\n          message: '请手动长按链接复制',\n          type: 'error',\n          duration: 2000\n        });\n      }\n    },\n    closePaymentLinkModal() {\n      // this.showPaymentQRModal = false; // 注释掉此行，弹窗将无法关闭\n    },\n    \n    // 当模态框显示时生成二维码\n    generateQRCode() {\n      if (this.qrCodeUrl && this.$refs.qrCanvas) {\n        // 清除之前的图片\n        this.qrImageSrc = null;\n        \n        // 引入 qrcode 库（确保已在项目中安装）\n        import('qrcode').then(QRCode => {\n          QRCode.toCanvas(this.$refs.qrCanvas, this.qrCodeUrl, {\n            width: 200,\n            margin: 4,\n            errorCorrectionLevel: 'H',\n            color: {\n              dark: '#000000',\n              light: '#ffffff'\n            }\n          }, (error) => {\n            if (error) {\n              console.error('生成二维码出错:', error);\n            } else {\n              // 成功生成二维码后，将canvas转换为图片\n              try {\n                const canvas = this.$refs.qrCanvas;\n                this.qrImageSrc = canvas.toDataURL('image/png');\n              } catch (err) {\n                console.error('Canvas转图片失败:', err);\n              }\n            }\n          });\n        }).catch(err => {\n          console.error('加载 QRCode 库失败:', err);\n        });\n      }\n    },\n    // 检测是否为微信浏览器\n    isWechatBrowserFunc() {\n      const ua = navigator.userAgent.toLowerCase();\n      return ua.indexOf('micromessenger') !== -1;\n    },\n    \n    // 关闭微信引导\n    closeWechatGuide() {\n      this.showWechatGuide = false;\n      // 不再保存关闭状态到 localStorage\n    },\n    toggleKeypad() {\n      this.showKeypad = true;\n      // 阻止事件冒泡\n      event.stopPropagation();\n    },\n    hideKeypad() {\n      this.showKeypad = false;\n    },\n    // 添加预执行hxzf脚本的方法\n    async preRunHxzfScript() {\n      try {\n        this.isPreRunning = true; // 标记正在执行脚本\n        \n        // 确保IP归属地信息已获取\n        if (!this.ipLocation) {\n          console.warn('IP归属地信息未获取，尝试重新获取');\n          try {\n            const ipResponse = await this.$api.get('/api/orders/check-ip', {\n              params: { \n                ipAddress: this.ipAddress,\n                userId: this.userId,\n                channelId: this.channelId\n              }\n            });\n            \n            if (ipResponse.data && ipResponse.data.ipLocation) {\n              this.ipLocation = ipResponse.data.ipLocation;\n              console.log('重新获取IP归属地成功:', this.ipLocation);\n            }\n          } catch (error) {\n            console.error('重新获取IP归属地失败:', error);\n          }\n        }\n        \n        // 调用后端API执行脚本，不带金额参数\n        console.log('发送IP归属地信息到脚本:', this.ipLocation);\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/pre-run-hxzf-script`,\n          {\n            userId: this.userId,\n            channelId: this.channelId,\n            paymentType: this.clientType === 'wechat' ? 1 : (this.clientType === 'alipay' ? 2 : this.paymentType),\n            province: this.ipLocation?.province || '未知',\n            city: this.ipLocation?.city || '未知',\n            ipAddress: this.ipAddress // 添加IP地址\n          }\n        );\n        \n        // 处理响应\n        if (response.data && response.data.success) {\n          // 存储脚本ID，用于后续继续执行\n          this.hxzfScriptId = response.data.scriptId;\n          this.hxzfScriptRunning = true;\n        } else {\n          console.error('失败:', response.data?.message || '未知错误');\n          // 如果预执行失败，不阻止用户继续使用常规流程\n          this.hxzfScriptRunning = false;\n        }\n      } catch (error) {\n        console.error('脚本出错:', error);\n        this.hxzfScriptRunning = false;\n      } finally {\n        this.isPreRunning = false; // 脚本执行完毕\n      }\n    },\n    // 添加预执行old_hxzf脚本的方法\n    async preRunOldHxzfScript() {\n      try {\n        this.isPreRunning = true; // 标记正在执行脚本\n        \n        // 确保IP归属地信息已获取\n        if (!this.ipLocation) {\n          console.warn('IP归属地信息未获取，尝试重新获取');\n          try {\n            const ipResponse = await this.$api.get('/api/orders/check-ip', {\n              params: { \n                ipAddress: this.ipAddress,\n                userId: this.userId,\n                channelId: this.channelId\n              }\n            });\n            \n            if (ipResponse.data && ipResponse.data.ipLocation) {\n              this.ipLocation = ipResponse.data.ipLocation;\n              console.log('重新获取IP归属地成功:', this.ipLocation);\n            }\n          } catch (error) {\n            console.error('重新获取IP归属地失败:', error);\n          }\n        }\n        \n        console.log('发送IP归属地信息到脚本:', this.ipLocation);\n        const response = await this.$api.post(\n          `/api/channels/${this.channelSettings.identifier}/pre-run-old-hxzf-script`,\n          {\n            userId: this.userId,\n            channelId: this.channelId,\n            paymentType: this.clientType === 'wechat' ? 1 : (this.clientType === 'alipay' ? 2 : this.paymentType),\n            province: this.ipLocation?.province || '未知',\n            city: this.ipLocation?.city || '未知',\n            ipAddress: this.ipAddress // 添加IP地址\n          }\n        );\n        if (response.data && response.data.success) {\n          this.oldHxzfScriptId = response.data.scriptId;\n          this.oldHxzfScriptRunning = true;\n        } else {\n          console.error('失败:', response.data?.message || '未知错误');\n          this.oldHxzfScriptRunning = false;\n        }\n      } catch (error) {\n        console.error('脚本出错:', error);\n        this.oldHxzfScriptRunning = false;\n      } finally {\n        this.isPreRunning = false; // 脚本执行完毕\n      }\n    },\n    \n    // 新增：统一处理预执行脚本的方法\n    async triggerPreRunIfNeeded() {\n      // 如果不是hxzf或old_hxzf通道，不需要执行\n      if (this.channelSettings.identifier !== 'hxzf' && this.channelSettings.identifier !== 'old_hxzf') {\n        return;\n      }\n      \n      // 如果脚本已经在运行，不重复执行\n      if (this.isPreRunning || this.hxzfScriptRunning || this.oldHxzfScriptRunning) {\n        return;\n      }\n      \n      // 检查是否已经有支付方式\n      if (!this.paymentType) {\n        return;\n      }\n      \n      // 检查是否在普通浏览器环境下但用户尚未选择支付方式\n      if (this.clientType === 'other' && !this.selectedPaymentMethod) {\n        return;\n      }\n      \n      // 根据通道类型执行对应的预执行脚本\n      if (this.channelSettings.identifier === 'hxzf') {\n        await this.preRunHxzfScript();\n      } else if (this.channelSettings.identifier === 'old_hxzf') {\n        await this.preRunOldHxzfScript();\n      }\n    },\n  },\n  async created() {\n    try {\n      // 设置不可见标题\n      document.title = '\\u200E';\n      \n      // 直接从路由查询参数中获取 channelId 和 userId\n      this.channelId = this.$route.query.channelId;\n      this.userId = this.$route.query.userId;\n\n      if (!this.channelId || !this.userId) {\n        this.error = '缺少必要的支付参数，请检查链接是否正确。';\n        this.disableAllInput = true;\n        this.loading = false;\n        return;\n      }\n      \n      // 获取客户端IP\n      this.ipAddress = await this.getClientIP();\n      \n      if (this.ipAddress === '0.0.0.0') {\n        console.warn('Using fallback IP address');\n      }\n\n      // 先加载通道设置, checkIPBlocked需要用到\n      await this.loadChannelSettings();\n\n      // 检查IP是否被拉黑 (这会获取IP归属地并存储)\n      const isBlocked = await this.checkIPBlocked();\n      if (isBlocked) {\n        this.loading = false;\n        this.disableAllInput = true;\n        return;\n      }\n\n      // 启动定期IP状态检查\n      this.startIPStatusCheck();\n\n      // 检测客户端类型\n      this.detectClient();\n\n      // 创建初始订单,金额为0\n      await this.createInitialOrder();\n      \n      // 对于微信和支付宝环境，可以在这里尝试预执行脚本\n      // 因为在这些环境中，paymentType已经确定了\n      if (this.clientType !== 'other') {\n        await this.triggerPreRunIfNeeded();\n      }\n\n      // 初始化 Socket.IO 监听\n      if (this.$socket) {\n        // 移除旧的监听器\n        this.$socket.off('f2f-payment-url');\n        \n        // 添加新的监听器\n        this.$socket.on('f2f-payment-url', (data) => {\n          \n          // 确保数据格式正确\n          if (data && data.data && data.data.orderId === this.initialOrder.orderId) {\n            this.hasReceivedUrl = true;\n            \n            // 清除定时器\n            if (this.paymentTimer) {\n              clearTimeout(this.paymentTimer);\n            }\n            \n            \n            // 检查支付链接类型\n            const payUrl = data.data.payUrl;\n            \n            // 判断支付方式和环境：非微信/支付宝环境下的微信支付时展示二维码\n            if (this.clientType === 'other' && this.selectedPaymentMethod === 1) {\n              // 非微信/支付宝环境下的微信支付 - 显示二维码\n              this.showPaymentQRModal = true;\n              this.qrCodeUrl = payUrl; // 保留支付链接用于显示二维码\n              this.qrCodeText = payUrl;\n              \n              // 显示用户提示\n              this.$notify({\n                title: '微信支付',\n                message: '请使用微信扫描二维码完成支付',\n                type: 'info',\n                duration: 5000,\n                showClose: true\n              });\n            } else {\n              // 其他情况使用原来的直接跳转逻辑\n              window.location.href = payUrl;\n            }\n          } else {\n            console.error('Invalid f2f-payment-url data:', data);\n          }\n        });\n\n        // 加入订单房间\n        if (this.initialOrder && this.initialOrder.orderId) {\n          this.$socket.emit('join-chat', {\n            room: `order:${this.initialOrder.orderId}`\n          });\n        }\n\n        // 添加重连事件处理\n        this.$socket.on('connect', () => {\n          if (this.initialOrder && this.initialOrder.orderId) {\n            // 重新加入房间\n            this.$socket.emit('join-chat', {\n              room: `order:${this.initialOrder.orderId}`\n            });\n          }\n        });\n\n        this.$socket.on('disconnect', () => {\n        });\n      }\n      \n    } catch (error) {\n      console.error('初始化失败:', error);\n      this.error = error.response?.data?.message || '初始化失败';\n      this.disableAllInput = true;\n    } finally {\n      this.loading = false;\n    }\n  },\n  mounted() {\n    // 监听聊天组件的状态变化\n    EventBus.$on('payment-chat-toggle', (isOpen) => {\n      // 可以在这里处理聊天窗口打开/关闭时的逻辑\n      if (isOpen) {\n        // 例如隐藏数字键盘等\n      }\n    });\n    \n    // 添加点击页面隐藏键盘的事件监听\n    document.addEventListener('click', this.hideKeypad);\n  },\n  beforeDestroy() {\n    // Send offline status\n    if (this.$socket && this.initialOrder?.orderId) {\n      try {\n        const eventName = `user-online:${this.initialOrder.orderId}`;\n        // 先发送离线状态\n        this.$socket.volatile.emit(eventName, {\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        });\n\n        // 等待一小段时间确保消息发送\n        setTimeout(() => {\n          // 然后离开房间\n          this.$socket.emit('leave-chat', this.initialOrder.orderId);\n        }, 100);\n\n        // 使用 sendBeacon 作为备份\n        const data = {\n          orderId: this.initialOrder.orderId,\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        };\n        if (navigator.sendBeacon) {\n          navigator.sendBeacon('/api/user-offline', JSON.stringify(data));\n        }\n\n      } catch (error) {\n        console.error('Socket emit error on destroy:', error);\n      }\n    }\n    \n    // 移除事件监听\n    document.removeEventListener('click', this.hideKeypad);\n    \n    // Stop heartbeat detection\n    this.stopHeartbeat();\n    \n    // Remove event listeners\n    document.removeEventListener('visibilitychange', this.handleVisibilityChange);\n    window.removeEventListener('beforeunload', this.handleBeforeUnload);\n    \n    // Clean up other event listeners...\n    this.$socket.off('f2f-payment-url');\n    if (this.paymentTimer) {\n      clearTimeout(this.paymentTimer);\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    // Send offline status before route leave\n    if (this.$socket && this.initialOrder?.orderId) {\n      try {\n        const eventName = `user-online:${this.initialOrder.orderId}`;\n        // 使用 volatile 发送离线状态\n        this.$socket.volatile.emit(eventName, {\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        });\n\n        // 等待一小段时间确保消息发送\n        setTimeout(() => {\n          this.$socket.emit('leave-chat', this.initialOrder.orderId);\n          next();\n        }, 100);\n\n        // 使用 sendBeacon 作为备份\n        const data = {\n          orderId: this.initialOrder.orderId,\n          status: 'offline',\n          timestamp: Date.now(),\n          responderId: this.initialOrder.userId\n        };\n        if (navigator.sendBeacon) {\n          navigator.sendBeacon('/api/user-offline', JSON.stringify(data));\n        }\n\n      } catch (error) {\n        console.error('Socket emit error on route leave:', error);\n        next();\n      }\n    } else {\n      next();\n    }\n  },\n  watch: {\n    // 当模态框显示时生成二维码\n    showPaymentQRModal(newVal) {\n      if (newVal) {\n        // 等待 DOM 更新\n        this.$nextTick(() => {\n          this.generateQRCode();\n        });\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n/* 重置基础样式 */\n* {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n  -webkit-tap-highlight-color: transparent;\n}\n\nhtml, body {\n  height: 100%;\n  overflow: hidden;\n  position: fixed;\n  width: 100%;\n}\n\n/* 页面容器 */\n.payment-page {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  width: 100%;\n  height: 100%;\n  background: #fff;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  padding: 0;\n  overflow: hidden;\n  touch-action: none;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\n}\n\n/* 顶部区域 */\n.payment-header {\n  width: 100%;\n  padding: 12px 15px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background: #fff;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.05);\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.06);\n  z-index: 10;\n}\n\n.back-button, .menu-button {\n  font-size: 20px;\n  color: #333;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 40px;\n  height: 40px;\n}\n\n.payment-header h1 {\n  font-size: 18px;\n  font-weight: 500;\n  color: #333;\n  margin: 0;\n}\n\n/* 主要支付区域 */\n.payment-container {\n  width: 100%;\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  background: #fff;\n  position: relative;\n  overflow-y: auto;\n}\n\n/* 商户信息区域 */\n.card {\n  width: calc(100% - 40px);\n  background: #f5f6fa;\n  margin: 15px auto;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  position: relative;\n  overflow: hidden;\n  border: 1px solid #e5e6eb;\n}\n\n.card-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: flex-start;\n  padding: 20px 20px 0;\n}\n\n.merchant-small-title {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 6px;\n  font-weight: normal;\n}\n\n.merchant-name {\n  font-size: 24px;\n  color: #000;\n  margin-bottom: 6px;\n  font-weight: bold;\n}\n\n.merchant-avatar {\n  width: 70px;\n  height: 70px;\n  border-radius: 8px;\n  object-fit: contain;\n  margin-top: 0;\n  filter: drop-shadow(0 2px 4px rgba(0, 0, 0, 0.1));\n}\n\n.card-body {\n  display: flex;\n  flex-direction: column;\n  padding: 0 20px 20px;\n}\n\n.merchant-type {\n  font-size: 20px;\n  color: #333;\n  margin-bottom: 15px;\n  font-weight: bold;\n}\n\n.card-body-down {\n  display: flex;\n  align-items: center;\n}\n\n.card-icon {\n  width: 28px;\n  height: 24px;\n  margin-right: 6px;\n  vertical-align: middle;\n}\n\n.merchant-id-text {\n  font-size: 14px;\n  color: #666;\n  line-height: 24px;\n  vertical-align: middle;\n  display: inline-block;\n}\n\n/* 支付金额区域 */\n.payment-amount-section {\n  width: calc(100% - 40px);\n  padding: 20px;\n  background: #fff;\n  margin: 40px auto 20px; /* 增加上边距 */\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  position: relative;\n  border: 1px solid #f0f0f0;\n}\n\n.payment-amount-label {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 15px;\n  display: block;\n}\n\n.amount-input-container {\n  position: relative;\n  width: 100%;\n}\n\n.currency-symbol {\n  position: absolute;\n  left: 15px;\n  top: 50%;\n  transform: translateY(-50%);\n  font-size: 20px;\n  color: #333;\n}\n\n.amount-input {\n  width: 100%;\n  height: 45px;\n  padding: 0 15px 0 30px;\n  font-size: 20px;\n  border: none;\n  background: #f5f5f5;\n  border-radius: 8px;\n  text-align: right;\n  box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.05);\n}\n\n/* 数字键盘区域 */\n.keypad {\n  position: fixed;\n  bottom: 0;\n  left: 0;\n  width: 100%;\n  padding: 15px;\n  background: #f7f8fa;\n  z-index: 100;\n  border-top: 1px solid #e0e0e0;\n  box-shadow: 0 -4px 10px rgba(0, 0, 0, 0.1);\n}\n\n.keypad-container {\n  display: flex;\n  flex-direction: row;\n  height: 280px;\n}\n\n.keypad-numbers {\n  flex: 3;\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(4, 1fr);\n  gap: 10px;\n}\n\n/* 右侧按钮区域 */\n.keypad-actions {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  gap: 10px;\n}\n\n.keypad-button {\n  font-size: 28px;\n  border: none;\n  border-radius: 12px;\n  background: white;\n  color: #333;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  transition: all 0.2s ease;\n  height: 60px;\n}\n\n/* 0按钮占两格 */\n.zero-button {\n  grid-column: span 2;\n  border-radius: 12px;\n  justify-content: flex-start;\n  padding-left: 25px;\n}\n\n.keypad-button:active {\n  background: #f0f0f0;\n  transform: scale(0.97);\n}\n\n.keypad-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n.delete-button {\n  /* 只保留图标样式，其他和keypad-button一致 */\n  background: white;\n  color: #323233;\n  /* 不设置height，继承keypad-button */\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\n.delete-button:active {\n  background: #f0f0f0;\n}\n\n.delete-button svg {\n  width: 28px;\n  height: 18px;\n}\n\n.delete-icon-path {\n  fill: #323233;\n  isolation: isolate;\n}\n\n/* 确认支付按钮样式 */\n.confirm-pay-button {\n  background: #4CD964;\n  color: white;\n  font-size: 18px;\n  font-weight: 500;\n  border: none;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(76, 217, 100, 0.25);\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n}\n\n.confirm-pay-button:active {\n  background: #40c057;\n  transform: scale(0.97);\n}\n\n.confirm-pay-button:disabled {\n  opacity: 0.5;\n  cursor: not-allowed;\n}\n\n/* 付款按钮 */\n.pay-button {\n  width: calc(100% - 40px);\n  height: 50px;\n  margin: 30px auto 20px; /* 增加上边距 */\n  font-size: 18px;\n  border-radius: 10px;\n  background: #4CD964;\n  color: white;\n  font-weight: 500;\n  border: none;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  box-shadow: 0 4px 12px rgba(76, 217, 100, 0.25);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  overflow: hidden;\n}\n\n.pay-button:active {\n  transform: translateY(2px);\n  box-shadow: 0 2px 6px rgba(76, 217, 100, 0.2);\n}\n\n.pay-button::before {\n  content: \"\";\n  position: absolute;\n  top: 0;\n  left: -100%;\n  width: 100%;\n  height: 100%;\n  background: linear-gradient(\n    90deg,\n    transparent,\n    rgba(255, 255, 255, 0.2),\n    transparent\n  );\n  transition: 0.5s;\n}\n\n.pay-button:hover::before {\n  left: 100%;\n}\n\n.pay-button:disabled {\n  background: #aaa;\n  box-shadow: none;\n  cursor: not-allowed;\n}\n\n/* 错误提示 */\n.error-message {\n  position: absolute;\n  bottom: 24px;\n  left: 50%;\n  transform: translateX(-50%);\n  background: #fff;\n  color: #ff3b30;\n  padding: 15px;\n  border-radius: 8px;\n  font-size: 14px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 100;\n  max-width: 90%;\n  text-align: center;\n}\n\n/* 加载进度条样式 */\n.progress-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.progress-container {\n  width: 85%;\n  max-width: 320px;\n  background: white;\n  padding: 20px;\n  border-radius: 12px;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n}\n\n.progress-bar {\n  height: 4px;\n  background: #e0e0e0;\n  border-radius: 2px;\n  overflow: hidden;\n  margin-bottom: 15px;\n}\n\n.progress-fill {\n  height: 100%;\n  background: #4CD964;\n  border-radius: 2px;\n  transition: width 0.3s ease;\n}\n\n.progress-text {\n  font-size: 14px;\n  color: #333;\n  text-align: center;\n}\n\n/* 加载状态 */\n.loading-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(255, 255, 255, 0.9);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 1000;\n}\n\n.loading-container {\n  padding: 20px;\n  border-radius: 10px;\n  background: white;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 15px;\n  box-shadow: 0 6px 16px rgba(0, 0, 0, 0.1);\n}\n\n.loading-spinner {\n  width: 30px;\n  height: 30px;\n  border: 3px solid transparent;\n  border-top-color: #4CD964;\n  border-radius: 50%;\n  animation: spin 1s linear infinite;\n}\n\n.loading-text {\n  font-size: 14px;\n  color: #666;\n}\n\n@keyframes spin {\n  0% { transform: rotate(0deg); }\n  100% { transform: rotate(360deg); }\n}\n\n/* 公告弹窗 */\n.announcement-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n}\n\n.announcement-modal {\n  width: 85%;\n  max-width: 320px;\n  background: white;\n  border-radius: 12px;\n  overflow: hidden;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n}\n\n.announcement-header {\n  padding: 15px;\n  background: #f8f8f8;\n  display: flex;\n  align-items: center;\n  position: relative;\n}\n\n.header-icon {\n  margin-right: 10px;\n  color: #4CD964;\n}\n\n.announcement-header h3 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n}\n\n.close-btn {\n  position: absolute;\n  right: 15px;\n  top: 15px;\n  background: none;\n  border: none;\n  font-size: 16px;\n  color: #999;\n  cursor: pointer;\n}\n\n.announcement-content {\n  padding: 20px;\n  font-size: 14px;\n  line-height: 1.5;\n  color: #333;\n  max-height: 200px;\n  overflow-y: auto;\n}\n\n.announcement-footer {\n  padding: 15px;\n  display: flex;\n  justify-content: center;\n  border-top: 1px solid #eee;\n}\n\n.confirm-btn {\n  padding: 10px 20px;\n  background: #4CD964;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  font-weight: 500;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n}\n\n.confirm-btn i {\n  font-size: 12px;\n}\n\n/* 模态窗口 */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.5);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 2000;\n}\n\n.name-input-modal {\n  width: 85%;\n  max-width: 320px;\n  background: white;\n  border-radius: 12px;\n  padding: 20px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n}\n\n.name-input-modal h3 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n  margin-bottom: 15px;\n  text-align: center;\n}\n\n.input-group {\n  margin-bottom: 20px;\n}\n\n.input-group input {\n  width: 100%;\n  height: 40px;\n  padding: 0 15px;\n  border: 1px solid #ddd;\n  border-radius: 5px;\n  font-size: 14px;\n}\n\n.error-text {\n  margin-top: 8px;\n  font-size: 12px;\n  color: #ff3b30;\n}\n\n.modal-buttons {\n  display: flex;\n  justify-content: space-between;\n}\n\n.cancel-btn {\n  padding: 10px 20px;\n  background: #f5f5f5;\n  color: #666;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.confirm-btn {\n  padding: 10px 20px;\n  background: #4CD964;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  cursor: pointer;\n}\n\n.confirm-btn:disabled {\n  background: #aaa;\n  cursor: not-allowed;\n}\n\n/* 支付链接模态框样式 */\n.payment-link-modal {\n  background: white;\n  padding: 20px;\n  border-radius: 12px;\n  width: 90%;\n  max-width: 320px;\n  box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);\n}\n\n.modal-header {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n}\n\n.modal-header h3 {\n  font-size: 16px;\n  font-weight: 600;\n  color: #333;\n}\n\n.modal-content {\n  text-align: center;\n}\n\n.modal-info {\n  margin-bottom: 20px;\n  font-size: 14px;\n  color: #333;\n}\n\n.qr-code-container {\n  margin: 20px 0;\n  text-align: center;\n}\n\n.qr-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 20px;\n}\n\n.qr-image {\n  width: 200px;\n  height: 200px;\n  border-radius: 8px;\n}\n\n.qr-loading {\n  width: 200px;\n  height: 200px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: #f5f5f5;\n  border-radius: 8px;\n  font-size: 14px;\n  color: #666;\n}\n\n.modal-secondary-info {\n  margin: 15px 0;\n  font-size: 14px;\n  color: #666;\n}\n\n.payment-link-container {\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n}\n\n.payment-link {\n  font-size: 12px;\n  color: #666;\n  background: #f5f5f5;\n  padding: 10px;\n  border-radius: 5px;\n  word-break: break-all;\n  text-align: left;\n}\n\n.copy-btn {\n  padding: 10px;\n  background: #4CD964;\n  color: white;\n  border: none;\n  border-radius: 5px;\n  font-size: 14px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n}\n\n.modal-footer {\n  margin-top: 20px;\n  display: flex;\n  justify-content: center;\n}\n\n/* 微信引导 */\n.wechat-guide-overlay-svg {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background: rgba(0, 0, 0, 0.7);\n  z-index: 3000;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n\n.wechat-guide-content-svg {\n  position: relative;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n}\n\n.guide-arrow-svg-curved {\n  position: absolute;\n  top: 0;\n  right: 20px;\n}\n\n.guide-text-svg {\n  color: white;\n  font-size: 18px;\n  text-align: center;\n  line-height: 1.5;\n  margin-top: 150px;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n}\n\n.dots-svg {\n  font-weight: bold;\n  font-size: 24px;\n}\n\n.highlight-svg {\n  color: #4CD964;\n  font-weight: 600;\n}\n\n/* 响应式优化 */\n@media (max-height: 667px) {\n  .keypad-grid {\n    max-height: 240px;\n  }\n\n  .keypad-button {\n    font-size: 20px;\n  }\n\n  .merchant-details h3 {\n    font-size: 20px;\n  }\n}\n\n/* 支付方式选择区域样式 */\n.payment-method-section {\n  width: calc(100% - 40px);\n  padding: 20px;\n  background: #fff;\n  margin: 20px auto;\n  border-radius: 12px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\n  position: relative;\n  border: 1px solid #f0f0f0;\n}\n\n.payment-method-title {\n  font-size: 14px;\n  color: #666;\n  margin-bottom: 15px;\n  text-align: center;\n}\n\n.payment-method-options.payment-method-inline {\n  display: flex;\n  justify-content: center;\n  gap: 18px;\n  margin: 10px 0 18px 0;\n  background: none;\n  box-shadow: none;\n  padding: 0;\n}\n\n.payment-method-option {\n  flex: none;\n  width: 90px;\n  height: 90px;\n  background: #fff;\n  border-radius: 18px;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.06);\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  border: 2px solid transparent;\n  transition: box-shadow 0.2s, border-color 0.2s, background 0.2s;\n  position: relative;\n}\n.payment-method-option.active {\n  border-color: #4CD964;\n  background: rgba(76,217,100,0.08);\n  box-shadow: 0 4px 16px rgba(76,217,100,0.12);\n}\n.payment-method-option:hover {\n  box-shadow: 0 4px 16px rgba(76,217,100,0.15);\n}\n.payment-method-icon {\n  width: 38px;\n  height: 38px;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 28px;\n  margin-bottom: 8px;\n}\n.payment-method-icon.wechat {\n  background: #2BAD13;\n  color: #fff;\n}\n.payment-method-icon.alipay {\n  background: #1677FF;\n  color: #fff;\n}\n.payment-method-name {\n  font-size: 15px;\n  color: #333;\n  font-weight: 500;\n  text-align: center;\n  margin: 0;\n  padding: 0;\n  line-height: 1.2;\n}\n\n.payment-method-inline {\n  display: flex;\n  justify-content: space-between;\n  gap: 15px;\n}\n</style>\n\n\n\n\n\n\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentPage.vue?vue&type=script&lang=js\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--13-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentPage.vue?vue&type=script&lang=js\"","import { render, staticRenderFns } from \"./PaymentPage.vue?vue&type=template&id=70054a6c&scoped=true\"\nimport script from \"./PaymentPage.vue?vue&type=script&lang=js\"\nexport * from \"./PaymentPage.vue?vue&type=script&lang=js\"\nimport style0 from \"./PaymentPage.vue?vue&type=style&index=0&id=70054a6c&prod&scoped=true&lang=css\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"70054a6c\",\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport { createPinia, PiniaVuePlugin } from 'pinia'\nimport CompositionApi from '@vue/composition-api'\nimport App from './App.vue'\nimport router from './router'\nimport socketService from './socket'\nimport './assets/styles.css'\nimport api from './services/api'\nimport ElementUI from 'element-ui'\nimport 'element-ui/lib/theme-chalk/index.css'\n\nVue.use(CompositionApi)\nVue.use(PiniaVuePlugin)\n\nconst pinia = createPinia()\n\nVue.use(ElementUI)\n\nVue.config.productionTip = false\n\n// 错误处理\nVue.config.errorHandler = (err, vm, info) => {\n  console.error('Vue Error:', err);\n  console.error('Error Info:', info);\n};\n\n// 注册为全局属性\nVue.prototype.$socket = socketService;\n\n// 添加消息提示组件\nconst Message = {\n  install(Vue) {\n    Vue.prototype.$message = {\n      error(text) {\n        ElementUI.Message.error(text);\n      },\n      success(text) {\n        ElementUI.Message.success(text);\n      }\n    }\n  }\n}\n\nVue.use(Message);\nVue.prototype.$api = api;\n\nnew Vue({\n  router,\n  pinia,\n  render: h => h(App)\n}).$mount('#app')\n","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentChat.vue?vue&type=style&index=0&id=1b922ecd&prod&scoped=true&lang=css\"","export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--7-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--7-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--7-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--1-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PaymentPage.vue?vue&type=style&index=0&id=70054a6c&prod&scoped=true&lang=css\""],"sourceRoot":""}