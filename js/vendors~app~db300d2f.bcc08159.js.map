{"version":3,"sources":["webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/engine.io-parser/build/esm/commons.js","webpack:///./node_modules/engine.io-parser/build/esm/encodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/contrib/base64-arraybuffer.js","webpack:///./node_modules/engine.io-parser/build/esm/decodePacket.browser.js","webpack:///./node_modules/engine.io-parser/build/esm/index.js","webpack:///./node_modules/engine.io-client/build/esm/globals.js","webpack:///./node_modules/engine.io-client/build/esm/util.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseqs.js","webpack:///./node_modules/engine.io-client/build/esm/transport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/has-cors.js","webpack:///./node_modules/engine.io-client/build/esm/transports/polling-xhr.js","webpack:///./node_modules/engine.io-client/build/esm/transports/websocket.js","webpack:///./node_modules/engine.io-client/build/esm/transports/webtransport.js","webpack:///./node_modules/engine.io-client/build/esm/transports/index.js","webpack:///./node_modules/engine.io-client/build/esm/contrib/parseuri.js","webpack:///./node_modules/engine.io-client/build/esm/socket.js","webpack:///./node_modules/engine.io-client/build/esm/index.js"],"names":["exports","nextTick","fn","args","Array","prototype","slice","call","arguments","shift","setTimeout","apply","platform","arch","execPath","title","pid","browser","env","argv","binding","name","Error","path","cwd","chdir","dir","resolve","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","key","ERROR_PACKET","type","data","withNativeBlob","Blob","toString","withNativeArrayBuffer","ArrayBuffer","isView","obj","buffer","encodePacket","supportsBinary","callback","encodeBlobAsBase64","fileReader","FileReader","onload","content","result","split","readAsDataURL","toArray","Uint8Array","byteOffset","byteLength","TEXT_ENCODER","encodePacketToBinary","packet","arrayBuffer","then","encoded","TextEncoder","encode","chars","lookup","i","length","charCodeAt","decode","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","len","p","arraybuffer","bytes","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","substring","packetType","decoded","SEPARATOR","String","fromCharCode","encodePayload","packets","encodedPackets","count","join","decodePayload","encodedPayload","decodedPacket","push","createPacketEncoderStream","TransformStream","controller","payloadLength","header","DataView","setUint8","view","setUint16","setBigUint64","BigInt","enqueue","TEXT_DECODER","totalLength","chunks","reduce","acc","chunk","concatChunks","size","j","createPacketDecoderStream","maxPayload","TextDecoder","state","expectedLength","isBinary","headerArray","getUint16","n","getUint32","Math","pow","protocol","isPromiseAvailable","Promise","cb","setTimeoutFn","globalThisShim","self","window","Function","defaultBinaryType","createCookieJar","pick","attr","k","hasOwnProperty","NATIVE_SET_TIMEOUT","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","opts","useNativeTimers","bind","clearTimeoutFn","BASE64_OVERHEAD","utf8Length","ceil","str","c","l","randomString","Date","now","random","encodeURIComponent","qs","qry","pairs","pair","decodeURIComponent","TransportError","reason","description","context","super","this","writable","query","socket","forceBase64","emitReserved","readyState","doOpen","doClose","onClose","write","onPacket","details","onPause","schema","_hostname","_port","_query","hostname","indexOf","port","secure","Number","encodedQuery","_polling","_poll","pause","total","once","doPoll","onOpen","close","doWrite","timestampRequests","timestampParam","sid","b64","createUri","value","XMLHttpRequest","err","hasCORS","empty","location","isSSL","xd","req","request","method","on","xhrStatus","onError","onData","pollXhr","createRequest","uri","_opts","_method","_uri","_data","undefined","_create","_a","xdomain","xhr","_xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","e","cookieJar","addCookies","withCredentials","requestTimeout","timeout","onreadystatechange","parseCookies","getResponseHeader","status","_onLoad","_onError","send","document","_index","requestsCount","requests","_cleanup","fromError","abort","responseText","attachEvent","unloadHandler","addEventListener","terminationEvent","hasXHR2","newRequest","responseType","XHR","assign","concat","isReactNative","navigator","product","toLowerCase","protocols","headers","ws","createSocket","addEventListeners","onopen","autoUnref","_socket","unref","onclose","closeEvent","onmessage","ev","onerror","lastPacket","WebSocketCtor","WebSocket","MozWebSocket","WS","_packet","_transport","WebTransport","transportOptions","closed","catch","ready","createBidirectionalStream","stream","decoderStream","MAX_SAFE_INTEGER","reader","readable","pipeThrough","getReader","encoderStream","pipeTo","_writer","getWriter","read","done","transports","websocket","webtransport","polling","re","parts","parse","src","b","replace","m","exec","source","host","authority","ipv6uri","pathNames","queryKey","regx","names","splice","$0","$1","$2","withEventListeners","removeEventListener","OFFLINE_EVENT_LISTENERS","listener","writeBuffer","_prevBufferLen","_pingInterval","_pingTimeout","_maxPayload","_pingTimeoutTime","Infinity","parsedUri","_transportsByName","t","transportName","agent","upgrade","rememberUpgrade","addTrailingSlash","rejectUnauthorized","perMessageDeflate","threshold","closeOnBeforeunload","_beforeunloadEventListener","transport","removeAllListeners","_offlineEventListener","_onClose","_cookieJar","_open","EIO","id","priorWebsocketSuccess","createTransport","setTransport","_onDrain","_onPacket","flush","onHandshake","JSON","_sendPacket","_resetPingTimeout","code","pingInterval","pingTimeout","_pingTimeoutTimer","delay","upgrading","_getWritablePackets","shouldCheckPayloadSize","payloadSize","hasExpired","msg","options","compress","cleanupAndClose","off","waitForUpgrade","tryAllTransports","SocketWithUpgrade","_upgrades","_probe","failed","onTransportOpen","cleanup","freezeTransport","error","onTransportClose","onupgrade","to","removeListener","_filterUpgrades","upgrades","filteredUpgrades","o","map","filter"],"mappings":"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","file":"js/vendors~app~db300d2f.bcc08159.js","sourcesContent":["exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach((key) => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + (content || \"\"));\n    };\n    return fileReader.readAsDataURL(data);\n};\nfunction toArray(data) {\n    if (data instanceof Uint8Array) {\n        return data;\n    }\n    else if (data instanceof ArrayBuffer) {\n        return new Uint8Array(data);\n    }\n    else {\n        return new Uint8Array(data.buffer, data.byteOffset, data.byteLength);\n    }\n}\nlet TEXT_ENCODER;\nexport function encodePacketToBinary(packet, callback) {\n    if (withNativeBlob && packet.data instanceof Blob) {\n        return packet.data.arrayBuffer().then(toArray).then(callback);\n    }\n    else if (withNativeArrayBuffer &&\n        (packet.data instanceof ArrayBuffer || isView(packet.data))) {\n        return callback(toArray(packet.data));\n    }\n    encodePacket(packet, false, (encoded) => {\n        if (!TEXT_ENCODER) {\n            TEXT_ENCODER = new TextEncoder();\n        }\n        callback(TEXT_ENCODER.encode(encoded));\n    });\n}\nexport { encodePacket };\n","// imported from https://github.com/socketio/base64-arraybuffer\nconst chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nconst lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (let i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nexport const encode = (arraybuffer) => {\n    let bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nexport const decode = (base64) => {\n    let bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    const arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE, } from \"./commons.js\";\nimport { decode } from \"./contrib/base64-arraybuffer.js\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nexport const decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType),\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType),\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1),\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type],\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            if (data instanceof Blob) {\n                // from WebSocket + binaryType \"blob\"\n                return data;\n            }\n            else {\n                // from HTTP long-polling or WebTransport\n                return new Blob([data]);\n            }\n        case \"arraybuffer\":\n        default:\n            if (data instanceof ArrayBuffer) {\n                // from HTTP long-polling (base64) or WebSocket + binaryType \"arraybuffer\"\n                return data;\n            }\n            else {\n                // from WebTransport (Uint8Array)\n                return data.buffer;\n            }\n    }\n};\n","import { encodePacket, encodePacketToBinary } from \"./encodePacket.js\";\nimport { decodePacket } from \"./decodePacket.js\";\nimport { ERROR_PACKET, } from \"./commons.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, (encodedPacket) => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport function createPacketEncoderStream() {\n    return new TransformStream({\n        transform(packet, controller) {\n            encodePacketToBinary(packet, (encodedPacket) => {\n                const payloadLength = encodedPacket.length;\n                let header;\n                // inspired by the WebSocket format: https://developer.mozilla.org/en-US/docs/Web/API/WebSockets_API/Writing_WebSocket_servers#decoding_payload_length\n                if (payloadLength < 126) {\n                    header = new Uint8Array(1);\n                    new DataView(header.buffer).setUint8(0, payloadLength);\n                }\n                else if (payloadLength < 65536) {\n                    header = new Uint8Array(3);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 126);\n                    view.setUint16(1, payloadLength);\n                }\n                else {\n                    header = new Uint8Array(9);\n                    const view = new DataView(header.buffer);\n                    view.setUint8(0, 127);\n                    view.setBigUint64(1, BigInt(payloadLength));\n                }\n                // first bit indicates whether the payload is plain text (0) or binary (1)\n                if (packet.data && typeof packet.data !== \"string\") {\n                    header[0] |= 0x80;\n                }\n                controller.enqueue(header);\n                controller.enqueue(encodedPacket);\n            });\n        },\n    });\n}\nlet TEXT_DECODER;\nfunction totalLength(chunks) {\n    return chunks.reduce((acc, chunk) => acc + chunk.length, 0);\n}\nfunction concatChunks(chunks, size) {\n    if (chunks[0].length === size) {\n        return chunks.shift();\n    }\n    const buffer = new Uint8Array(size);\n    let j = 0;\n    for (let i = 0; i < size; i++) {\n        buffer[i] = chunks[0][j++];\n        if (j === chunks[0].length) {\n            chunks.shift();\n            j = 0;\n        }\n    }\n    if (chunks.length && j < chunks[0].length) {\n        chunks[0] = chunks[0].slice(j);\n    }\n    return buffer;\n}\nexport function createPacketDecoderStream(maxPayload, binaryType) {\n    if (!TEXT_DECODER) {\n        TEXT_DECODER = new TextDecoder();\n    }\n    const chunks = [];\n    let state = 0 /* State.READ_HEADER */;\n    let expectedLength = -1;\n    let isBinary = false;\n    return new TransformStream({\n        transform(chunk, controller) {\n            chunks.push(chunk);\n            while (true) {\n                if (state === 0 /* State.READ_HEADER */) {\n                    if (totalLength(chunks) < 1) {\n                        break;\n                    }\n                    const header = concatChunks(chunks, 1);\n                    isBinary = (header[0] & 0x80) === 0x80;\n                    expectedLength = header[0] & 0x7f;\n                    if (expectedLength < 126) {\n                        state = 3 /* State.READ_PAYLOAD */;\n                    }\n                    else if (expectedLength === 126) {\n                        state = 1 /* State.READ_EXTENDED_LENGTH_16 */;\n                    }\n                    else {\n                        state = 2 /* State.READ_EXTENDED_LENGTH_64 */;\n                    }\n                }\n                else if (state === 1 /* State.READ_EXTENDED_LENGTH_16 */) {\n                    if (totalLength(chunks) < 2) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 2);\n                    expectedLength = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length).getUint16(0);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else if (state === 2 /* State.READ_EXTENDED_LENGTH_64 */) {\n                    if (totalLength(chunks) < 8) {\n                        break;\n                    }\n                    const headerArray = concatChunks(chunks, 8);\n                    const view = new DataView(headerArray.buffer, headerArray.byteOffset, headerArray.length);\n                    const n = view.getUint32(0);\n                    if (n > Math.pow(2, 53 - 32) - 1) {\n                        // the maximum safe integer in JavaScript is 2^53 - 1\n                        controller.enqueue(ERROR_PACKET);\n                        break;\n                    }\n                    expectedLength = n * Math.pow(2, 32) + view.getUint32(4);\n                    state = 3 /* State.READ_PAYLOAD */;\n                }\n                else {\n                    if (totalLength(chunks) < expectedLength) {\n                        break;\n                    }\n                    const data = concatChunks(chunks, expectedLength);\n                    controller.enqueue(decodePacket(isBinary ? data : TEXT_DECODER.decode(data), binaryType));\n                    state = 0 /* State.READ_HEADER */;\n                }\n                if (expectedLength === 0 || expectedLength > maxPayload) {\n                    controller.enqueue(ERROR_PACKET);\n                    break;\n                }\n            }\n        },\n    });\n}\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload, };\n","export const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return (cb) => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const globalThisShim = (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\nexport const defaultBinaryType = \"arraybuffer\";\nexport function createCookieJar() { }\n","import { globalThisShim as globalThis } from \"./globals.node.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = globalThis.setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = globalThis.clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = globalThis.setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = globalThis.clearTimeout.bind(globalThis);\n    }\n}\n// base64 encoded buffers are about 33% bigger (https://en.wikipedia.org/wiki/Base64)\nconst BASE64_OVERHEAD = 1.33;\n// we could also have used `new Blob([obj]).size`, but it isn't supported in IE9\nexport function byteLength(obj) {\n    if (typeof obj === \"string\") {\n        return utf8Length(obj);\n    }\n    // arraybuffer or blob\n    return Math.ceil((obj.byteLength || obj.size) * BASE64_OVERHEAD);\n}\nfunction utf8Length(str) {\n    let c = 0, length = 0;\n    for (let i = 0, l = str.length; i < l; i++) {\n        c = str.charCodeAt(i);\n        if (c < 0x80) {\n            length += 1;\n        }\n        else if (c < 0x800) {\n            length += 2;\n        }\n        else if (c < 0xd800 || c >= 0xe000) {\n            length += 3;\n        }\n        else {\n            i++;\n            length += 4;\n        }\n    }\n    return length;\n}\n/**\n * Generates a random 8-characters string.\n */\nexport function randomString() {\n    return (Date.now().toString(36).substring(3) +\n        Math.random().toString(36).substring(2, 5));\n}\n","// imported from https://github.com/galkn/querystring\n/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\nexport function encode(obj) {\n    let str = '';\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            if (str.length)\n                str += '&';\n            str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n        }\n    }\n    return str;\n}\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\nexport function decode(qs) {\n    let qry = {};\n    let pairs = qs.split('&');\n    for (let i = 0, l = pairs.length; i < l; i++) {\n        let pair = pairs[i].split('=');\n        qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n    }\n    return qry;\n}\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nimport { encode } from \"./contrib/parseqs.js\";\nexport class TransportError extends Error {\n    constructor(reason, description, context) {\n        super(reason);\n        this.description = description;\n        this.context = context;\n        this.type = \"TransportError\";\n    }\n}\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} opts - options\n     * @protected\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.socket = opts.socket;\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} reason\n     * @param description\n     * @param context - the error context\n     * @return {Transport} for chaining\n     * @protected\n     */\n    onError(reason, description, context) {\n        super.emitReserved(\"error\", new TransportError(reason, description, context));\n        return this;\n    }\n    /**\n     * Opens the transport.\n     */\n    open() {\n        this.readyState = \"opening\";\n        this.doOpen();\n        return this;\n    }\n    /**\n     * Closes the transport.\n     */\n    close() {\n        if (this.readyState === \"opening\" || this.readyState === \"open\") {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     */\n    send(packets) {\n        if (this.readyState === \"open\") {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emitReserved(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @protected\n     */\n    onPacket(packet) {\n        super.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @protected\n     */\n    onClose(details) {\n        this.readyState = \"closed\";\n        super.emitReserved(\"close\", details);\n    }\n    /**\n     * Pauses the transport, in order not to lose packets during an upgrade.\n     *\n     * @param onPause\n     */\n    pause(onPause) { }\n    createUri(schema, query = {}) {\n        return (schema +\n            \"://\" +\n            this._hostname() +\n            this._port() +\n            this.opts.path +\n            this._query(query));\n    }\n    _hostname() {\n        const hostname = this.opts.hostname;\n        return hostname.indexOf(\":\") === -1 ? hostname : \"[\" + hostname + \"]\";\n    }\n    _port() {\n        if (this.opts.port &&\n            ((this.opts.secure && Number(this.opts.port !== 443)) ||\n                (!this.opts.secure && Number(this.opts.port) !== 80))) {\n            return \":\" + this.opts.port;\n        }\n        else {\n            return \"\";\n        }\n    }\n    _query(query) {\n        const encodedQuery = encode(query);\n        return encodedQuery.length ? \"?\" + encodedQuery : \"\";\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { randomString } from \"../util.js\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this._polling = false;\n    }\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @protected\n     */\n    doOpen() {\n        this._poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} onPause - callback upon buffers are flushed and transport is paused\n     * @package\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this._polling || !this.writable) {\n            let total = 0;\n            if (this._polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @private\n     */\n    _poll() {\n        this._polling = true;\n        this.doPoll();\n        this.emitReserved(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @protected\n     */\n    onData(data) {\n        const callback = (packet) => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose({ description: \"transport closed by the server\" });\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this._polling = false;\n            this.emitReserved(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this._poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @protected\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} packets - data packets\n     * @protected\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, (data) => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emitReserved(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        const query = this.query || {};\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\n","// imported from https://github.com/component/has-cors\nlet value = false;\ntry {\n    value = typeof XMLHttpRequest !== 'undefined' &&\n        'withCredentials' in new XMLHttpRequest();\n}\ncatch (err) {\n    // if XMLHttp support is disabled in IE then it will throw\n    // when trying to create\n}\nexport const hasCORS = value;\n","import { Polling } from \"./polling.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { globalThisShim as globalThis } from \"../globals.node.js\";\nimport { hasCORS } from \"../contrib/has-cors.js\";\nfunction empty() { }\nexport class BaseXHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @package\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n        }\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data,\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr post error\", xhrStatus, context);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", (xhrStatus, context) => {\n            this.onError(\"xhr poll error\", xhrStatus, context);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @package\n     */\n    constructor(createRequest, uri, opts) {\n        super();\n        this.createRequest = createRequest;\n        installTimerFunctions(this, opts);\n        this._opts = opts;\n        this._method = opts.method || \"GET\";\n        this._uri = uri;\n        this._data = undefined !== opts.data ? opts.data : null;\n        this._create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @private\n     */\n    _create() {\n        var _a;\n        const opts = pick(this._opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this._opts.xd;\n        const xhr = (this._xhr = this.createRequest(opts));\n        try {\n            xhr.open(this._method, this._uri, true);\n            try {\n                if (this._opts.extraHeaders) {\n                    // @ts-ignore\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this._opts.extraHeaders) {\n                        if (this._opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this._opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this._method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.addCookies(xhr);\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this._opts.withCredentials;\n            }\n            if (this._opts.requestTimeout) {\n                xhr.timeout = this._opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                var _a;\n                if (xhr.readyState === 3) {\n                    (_a = this._opts.cookieJar) === null || _a === void 0 ? void 0 : _a.parseCookies(\n                    // @ts-ignore\n                    xhr.getResponseHeader(\"set-cookie\"));\n                }\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this._onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this._onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this._data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this._onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this._index = Request.requestsCount++;\n            Request.requests[this._index] = this;\n        }\n    }\n    /**\n     * Called upon error.\n     *\n     * @private\n     */\n    _onError(err) {\n        this.emitReserved(\"error\", err, this._xhr);\n        this._cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @private\n     */\n    _cleanup(fromError) {\n        if (\"undefined\" === typeof this._xhr || null === this._xhr) {\n            return;\n        }\n        this._xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this._xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this._index];\n        }\n        this._xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @private\n     */\n    _onLoad() {\n        const data = this._xhr.responseText;\n        if (data !== null) {\n            this.emitReserved(\"data\", data);\n            this.emitReserved(\"success\");\n            this._cleanup();\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @package\n     */\n    abort() {\n        this._cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\nconst hasXHR2 = (function () {\n    const xhr = newRequest({\n        xdomain: false,\n    });\n    return xhr && xhr.responseType !== null;\n})();\n/**\n * HTTP long-polling based on the built-in `XMLHttpRequest` object.\n *\n * Usage: browser\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest\n */\nexport class XHR extends BaseXHR {\n    constructor(opts) {\n        super(opts);\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd }, this.opts);\n        return new Request(newRequest, this.uri(), opts);\n    }\n}\nfunction newRequest(opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { pick, randomString } from \"../util.js\";\nimport { encodePacket } from \"engine.io-parser\";\nimport { globalThisShim as globalThis, nextTick } from \"../globals.node.js\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class BaseWS extends Transport {\n    get name() {\n        return \"websocket\";\n    }\n    doOpen() {\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws = this.createSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = (closeEvent) => this.onClose({\n            description: \"websocket connection closed\",\n            context: closeEvent,\n        });\n        this.ws.onmessage = (ev) => this.onData(ev.data);\n        this.ws.onerror = (e) => this.onError(\"websocket error\", e);\n    }\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, (data) => {\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    this.doWrite(packet, data);\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.onerror = () => { };\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @private\n     */\n    uri() {\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        const query = this.query || {};\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = randomString();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        return this.createUri(schema, query);\n    }\n}\nconst WebSocketCtor = globalThis.WebSocket || globalThis.MozWebSocket;\n/**\n * WebSocket transport based on the built-in `WebSocket` object.\n *\n * Usage: browser, Node.js (since v21), Deno, Bun\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebSocket\n * @see https://caniuse.com/mdn-api_websocket\n * @see https://nodejs.org/api/globals.html#websocket\n */\nexport class WS extends BaseWS {\n    createSocket(uri, protocols, opts) {\n        return !isReactNative\n            ? protocols\n                ? new WebSocketCtor(uri, protocols)\n                : new WebSocketCtor(uri)\n            : new WebSocketCtor(uri, protocols, opts);\n    }\n    doWrite(_packet, data) {\n        this.ws.send(data);\n    }\n}\n","import { Transport } from \"../transport.js\";\nimport { nextTick } from \"../globals.node.js\";\nimport { createPacketDecoderStream, createPacketEncoderStream, } from \"engine.io-parser\";\n/**\n * WebTransport transport based on the built-in `WebTransport` object.\n *\n * Usage: browser, Node.js (with the `@fails-components/webtransport` package)\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/WebTransport\n * @see https://caniuse.com/webtransport\n */\nexport class WT extends Transport {\n    get name() {\n        return \"webtransport\";\n    }\n    doOpen() {\n        try {\n            // @ts-ignore\n            this._transport = new WebTransport(this.createUri(\"https\"), this.opts.transportOptions[this.name]);\n        }\n        catch (err) {\n            return this.emitReserved(\"error\", err);\n        }\n        this._transport.closed\n            .then(() => {\n            this.onClose();\n        })\n            .catch((err) => {\n            this.onError(\"webtransport error\", err);\n        });\n        // note: we could have used async/await, but that would require some additional polyfills\n        this._transport.ready.then(() => {\n            this._transport.createBidirectionalStream().then((stream) => {\n                const decoderStream = createPacketDecoderStream(Number.MAX_SAFE_INTEGER, this.socket.binaryType);\n                const reader = stream.readable.pipeThrough(decoderStream).getReader();\n                const encoderStream = createPacketEncoderStream();\n                encoderStream.readable.pipeTo(stream.writable);\n                this._writer = encoderStream.writable.getWriter();\n                const read = () => {\n                    reader\n                        .read()\n                        .then(({ done, value }) => {\n                        if (done) {\n                            return;\n                        }\n                        this.onPacket(value);\n                        read();\n                    })\n                        .catch((err) => {\n                    });\n                };\n                read();\n                const packet = { type: \"open\" };\n                if (this.query.sid) {\n                    packet.data = `{\"sid\":\"${this.query.sid}\"}`;\n                }\n                this._writer.write(packet).then(() => this.onOpen());\n            });\n        });\n    }\n    write(packets) {\n        this.writable = false;\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            this._writer.write(packet).then(() => {\n                if (lastPacket) {\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emitReserved(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    doClose() {\n        var _a;\n        (_a = this._transport) === null || _a === void 0 ? void 0 : _a.close();\n    }\n}\n","import { XHR } from \"./polling-xhr.node.js\";\nimport { WS } from \"./websocket.node.js\";\nimport { WT } from \"./webtransport.js\";\nexport const transports = {\n    websocket: WS,\n    webtransport: WT,\n    polling: XHR,\n};\n","// imported from https://github.com/galkn/parseuri\n/**\n * Parses a URI\n *\n * Note: we could also have used the built-in URL object, but it isn't supported on all platforms.\n *\n * See:\n * - https://developer.mozilla.org/en-US/docs/Web/API/URL\n * - https://caniuse.com/url\n * - https://www.rfc-editor.org/rfc/rfc3986#appendix-B\n *\n * History of the parse() method:\n * - first commit: https://github.com/socketio/socket.io-client/commit/4ee1d5d94b3906a9c052b459f1a818b15f38f91c\n * - export into its own module: https://github.com/socketio/engine.io-client/commit/de2c561e4564efeb78f1bdb1ba39ef81b2822cb3\n * - reimport: https://github.com/socketio/engine.io-client/commit/df32277c3f6d622eec5ed09f493cae3f3391d242\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\nconst re = /^(?:(?![^:@\\/?#]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@\\/?#]*)(?::([^:@\\/?#]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\nconst parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\nexport function parse(str) {\n    if (str.length > 8000) {\n        throw \"URI too long\";\n    }\n    const src = str, b = str.indexOf('['), e = str.indexOf(']');\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n    let m = re.exec(str || ''), uri = {}, i = 14;\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n    return uri;\n}\nfunction pathNames(obj, path) {\n    const regx = /\\/{2,9}/g, names = path.replace(regx, \"/\").split(\"/\");\n    if (path.slice(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.slice(-1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n    return names;\n}\nfunction queryKey(uri, query) {\n    const data = {};\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n    return data;\n}\n","import { transports as DEFAULT_TRANSPORTS } from \"./transports/index.js\";\nimport { installTimerFunctions, byteLength } from \"./util.js\";\nimport { decode } from \"./contrib/parseqs.js\";\nimport { parse } from \"./contrib/parseuri.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nimport { createCookieJar, defaultBinaryType, nextTick, } from \"./globals.node.js\";\nconst withEventListeners = typeof addEventListener === \"function\" &&\n    typeof removeEventListener === \"function\";\nconst OFFLINE_EVENT_LISTENERS = [];\nif (withEventListeners) {\n    // within a ServiceWorker, any event handler for the 'offline' event must be added on the initial evaluation of the\n    // script, so we create one single event listener here which will forward the event to the socket instances\n    addEventListener(\"offline\", () => {\n        OFFLINE_EVENT_LISTENERS.forEach((listener) => listener());\n    }, false);\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes without upgrade mechanism, which means that it will keep the first low-level transport that\n * successfully establishes the connection.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithoutUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithoutUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithUpgrade\n * @see Socket\n */\nexport class SocketWithoutUpgrade extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri - uri or options\n     * @param {Object} opts - options\n     */\n    constructor(uri, opts) {\n        super();\n        this.binaryType = defaultBinaryType;\n        this.writeBuffer = [];\n        this._prevBufferLen = 0;\n        this._pingInterval = -1;\n        this._pingTimeout = -1;\n        this._maxPayload = -1;\n        /**\n         * The expiration timestamp of the {@link _pingTimeoutTimer} object is tracked, in case the timer is throttled and the\n         * callback is not fired on time. This can happen for example when a laptop is suspended or when a phone is locked.\n         */\n        this._pingTimeoutTime = Infinity;\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            const parsedUri = parse(uri);\n            opts.hostname = parsedUri.host;\n            opts.secure =\n                parsedUri.protocol === \"https\" || parsedUri.protocol === \"wss\";\n            opts.port = parsedUri.port;\n            if (parsedUri.query)\n                opts.query = parsedUri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parse(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = [];\n        this._transportsByName = {};\n        opts.transports.forEach((t) => {\n            const transportName = t.prototype.name;\n            this.transports.push(transportName);\n            this._transportsByName[transportName] = t;\n        });\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            addTrailingSlash: true,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024,\n            },\n            transportOptions: {},\n            closeOnBeforeunload: false,\n        }, opts);\n        this.opts.path =\n            this.opts.path.replace(/\\/$/, \"\") +\n                (this.opts.addTrailingSlash ? \"/\" : \"\");\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = decode(this.opts.query);\n        }\n        if (withEventListeners) {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                this._beforeunloadEventListener = () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                };\n                addEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this._offlineEventListener = () => {\n                    this._onClose(\"transport close\", {\n                        description: \"network connection lost\",\n                    });\n                };\n                OFFLINE_EVENT_LISTENERS.push(this._offlineEventListener);\n            }\n        }\n        if (this.opts.withCredentials) {\n            this._cookieJar = createCookieJar();\n        }\n        this._open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} name - transport name\n     * @return {Transport}\n     * @private\n     */\n    createTransport(name) {\n        const query = Object.assign({}, this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port,\n        }, this.opts.transportOptions[name]);\n        return new this._transportsByName[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @private\n     */\n    _open() {\n        if (this.transports.length === 0) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        const transportName = this.opts.rememberUpgrade &&\n            SocketWithoutUpgrade.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1\n            ? \"websocket\"\n            : this.transports[0];\n        this.readyState = \"opening\";\n        const transport = this.createTransport(transportName);\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this._onDrain.bind(this))\n            .on(\"packet\", this._onPacket.bind(this))\n            .on(\"error\", this._onError.bind(this))\n            .on(\"close\", (reason) => this._onClose(\"transport close\", reason));\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        SocketWithoutUpgrade.priorWebsocketSuccess =\n            \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n    }\n    /**\n     * Handles a packet.\n     *\n     * @private\n     */\n    _onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this._sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    this._resetPingTimeout();\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this._onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this._pingInterval = data.pingInterval;\n        this._pingTimeout = data.pingTimeout;\n        this._maxPayload = data.maxPayload;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this._resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @private\n     */\n    _resetPingTimeout() {\n        this.clearTimeoutFn(this._pingTimeoutTimer);\n        const delay = this._pingInterval + this._pingTimeout;\n        this._pingTimeoutTime = Date.now() + delay;\n        this._pingTimeoutTimer = this.setTimeoutFn(() => {\n            this._onClose(\"ping timeout\");\n        }, delay);\n        if (this.opts.autoUnref) {\n            this._pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @private\n     */\n    _onDrain() {\n        this.writeBuffer.splice(0, this._prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this._prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            const packets = this._getWritablePackets();\n            this.transport.send(packets);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this._prevBufferLen = packets.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Ensure the encoded size of the writeBuffer is below the maxPayload value sent by the server (only for HTTP\n     * long-polling)\n     *\n     * @private\n     */\n    _getWritablePackets() {\n        const shouldCheckPayloadSize = this._maxPayload &&\n            this.transport.name === \"polling\" &&\n            this.writeBuffer.length > 1;\n        if (!shouldCheckPayloadSize) {\n            return this.writeBuffer;\n        }\n        let payloadSize = 1; // first packet type\n        for (let i = 0; i < this.writeBuffer.length; i++) {\n            const data = this.writeBuffer[i].data;\n            if (data) {\n                payloadSize += byteLength(data);\n            }\n            if (i > 0 && payloadSize > this._maxPayload) {\n                return this.writeBuffer.slice(0, i);\n            }\n            payloadSize += 2; // separator + packet type\n        }\n        return this.writeBuffer;\n    }\n    /**\n     * Checks whether the heartbeat timer has expired but the socket has not yet been notified.\n     *\n     * Note: this method is private for now because it does not really fit the WebSocket API, but if we put it in the\n     * `write()` method then the message would not be buffered by the Socket.IO client.\n     *\n     * @return {boolean}\n     * @private\n     */\n    /* private */ _hasPingExpired() {\n        if (!this._pingTimeoutTime)\n            return true;\n        const hasExpired = Date.now() > this._pingTimeoutTime;\n        if (hasExpired) {\n            this._pingTimeoutTime = 0;\n            nextTick(() => {\n                this._onClose(\"ping timeout\");\n            }, this.setTimeoutFn);\n        }\n        return hasExpired;\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    write(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a message. Alias of {@link Socket#write}.\n     *\n     * @param {String} msg - message.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @return {Socket} for chaining.\n     */\n    send(msg, options, fn) {\n        this._sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} type: packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} fn - callback function.\n     * @private\n     */\n    _sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options,\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     */\n    close() {\n        const close = () => {\n            this._onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @private\n     */\n    _onError(err) {\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        if (this.opts.tryAllTransports &&\n            this.transports.length > 1 &&\n            this.readyState === \"opening\") {\n            this.transports.shift();\n            return this._open();\n        }\n        this.emitReserved(\"error\", err);\n        this._onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @private\n     */\n    _onClose(reason, description) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this._pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (withEventListeners) {\n                if (this._beforeunloadEventListener) {\n                    removeEventListener(\"beforeunload\", this._beforeunloadEventListener, false);\n                }\n                if (this._offlineEventListener) {\n                    const i = OFFLINE_EVENT_LISTENERS.indexOf(this._offlineEventListener);\n                    if (i !== -1) {\n                        OFFLINE_EVENT_LISTENERS.splice(i, 1);\n                    }\n                }\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, description);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this._prevBufferLen = 0;\n        }\n    }\n}\nSocketWithoutUpgrade.protocol = protocol;\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * In order to allow tree-shaking, there are no transports included, that's why the `transports` option is mandatory.\n *\n * @example\n * import { SocketWithUpgrade, WebSocket } from \"engine.io-client\";\n *\n * const socket = new SocketWithUpgrade({\n *   transports: [WebSocket]\n * });\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see Socket\n */\nexport class SocketWithUpgrade extends SocketWithoutUpgrade {\n    constructor() {\n        super(...arguments);\n        this._upgrades = [];\n    }\n    onOpen() {\n        super.onOpen();\n        if (\"open\" === this.readyState && this.opts.upgrade) {\n            for (let i = 0; i < this._upgrades.length; i++) {\n                this._probe(this._upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} name - transport name\n     * @private\n     */\n    _probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        SocketWithoutUpgrade.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", (msg) => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    SocketWithoutUpgrade.priorWebsocketSuccess =\n                        \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = (err) => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        if (this._upgrades.indexOf(\"webtransport\") !== -1 &&\n            name !== \"webtransport\") {\n            // favor WebTransport\n            this.setTimeoutFn(() => {\n                if (!failed) {\n                    transport.open();\n                }\n            }, 200);\n        }\n        else {\n            transport.open();\n        }\n    }\n    onHandshake(data) {\n        this._upgrades = this._filterUpgrades(data.upgrades);\n        super.onHandshake(data);\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} upgrades - server upgrades\n     * @private\n     */\n    _filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        for (let i = 0; i < upgrades.length; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\n/**\n * This class provides a WebSocket-like interface to connect to an Engine.IO server. The connection will be established\n * with one of the available low-level transports, like HTTP long-polling, WebSocket or WebTransport.\n *\n * This class comes with an upgrade mechanism, which means that once the connection is established with the first\n * low-level transport, it will try to upgrade to a better transport.\n *\n * @example\n * import { Socket } from \"engine.io-client\";\n *\n * const socket = new Socket();\n *\n * socket.on(\"open\", () => {\n *   socket.send(\"hello\");\n * });\n *\n * @see SocketWithoutUpgrade\n * @see SocketWithUpgrade\n */\nexport class Socket extends SocketWithUpgrade {\n    constructor(uri, opts = {}) {\n        const o = typeof uri === \"object\" ? uri : opts;\n        if (!o.transports ||\n            (o.transports && typeof o.transports[0] === \"string\")) {\n            o.transports = (o.transports || [\"polling\", \"websocket\", \"webtransport\"])\n                .map((transportName) => DEFAULT_TRANSPORTS[transportName])\n                .filter((t) => !!t);\n        }\n        super(uri, o);\n    }\n}\n","import { Socket } from \"./socket.js\";\nexport { Socket };\nexport { SocketWithoutUpgrade, SocketWithUpgrade, } from \"./socket.js\";\nexport const protocol = Socket.protocol;\nexport { Transport, TransportError } from \"./transport.js\";\nexport { transports } from \"./transports/index.js\";\nexport { installTimerFunctions } from \"./util.js\";\nexport { parse } from \"./contrib/parseuri.js\";\nexport { nextTick } from \"./globals.node.js\";\nexport { Fetch } from \"./transports/polling-fetch.js\";\nexport { XHR as NodeXHR } from \"./transports/polling-xhr.node.js\";\nexport { XHR } from \"./transports/polling-xhr.js\";\nexport { WS as NodeWebSocket } from \"./transports/websocket.node.js\";\nexport { WS as WebSocket } from \"./transports/websocket.js\";\nexport { WT as WebTransport } from \"./transports/webtransport.js\";\n"],"sourceRoot":""}